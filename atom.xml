<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gary Wu</title>
  
  <subtitle>运维架构师 - 从入门到放弃</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://garywu520.github.io/blog/"/>
  <updated>2019-11-20T09:28:11.574Z</updated>
  <id>https://garywu520.github.io/blog/</id>
  
  <author>
    <name>Gary Wu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>开源wiki系统-XWiki</title>
    <link href="https://garywu520.github.io/blog/2019/11/20/%E5%BC%80%E6%BA%90wiki%E7%B3%BB%E7%BB%9F-XWiki/"/>
    <id>https://garywu520.github.io/blog/2019/11/20/开源wiki系统-XWiki/</id>
    <published>2019-11-20T07:38:58.000Z</published>
    <updated>2019-11-20T09:28:11.574Z</updated>
    
    <content type="html"><![CDATA[<h5 id="一、XWiki介绍"><a href="#一、XWiki介绍" class="headerlink" title="一、XWiki介绍"></a>一、XWiki介绍</h5><p>就是一个开源wiki，不像 Confluence 一样需要购买 License 才能使用</p><h5 id="二、Xwiki官网与下载"><a href="#二、Xwiki官网与下载" class="headerlink" title="二、Xwiki官网与下载"></a>二、Xwiki官网与下载</h5><ul><li>官网： <a href="https://www.xwiki.org/" target="_blank" rel="noopener">https://www.xwiki.org/</a> </li><li>XWiki下载页：<a href="http://download.forge.ow2.org/xwiki/" target="_blank" rel="noopener">xwiki download</a> – 检索关键字[xwiki-enterprise-installer-generic]</li><li>XWwiki安装的版本：xwiki-enterprise-installer-generic-9.4</li></ul><a id="more"></a><h5 id="三、-安装JDK"><a href="#三、-安装JDK" class="headerlink" title="三、 安装JDK"></a>三、 安装JDK</h5><ul><li><a href="https://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html" target="_blank" rel="noopener">download jdk 8u202</a></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">下载jdk-8u202-linux-x64.rpm</span></span><br><span class="line">rpm -ivh jdk-8u202-linux-x64.rpm</span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><p>cat  /etc/.bash_profile</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">JAVA_Home config</span></span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_102/</span><br><span class="line">export JRE_HOME=/usr/java/jdk1.8.0_102/jre</span><br><span class="line">PATH=$PATH:$HOME/bin:$JAVA_HOME/bin</span><br><span class="line">export PATH</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">source .bash_profile </span><br><span class="line">echo $JAVA_HOME</span><br><span class="line">echo $JRE_HOME</span><br><span class="line">echo $PATH</span><br></pre></td></tr></table></figure><h5 id="四、安装XWiki"><a href="#四、安装XWiki" class="headerlink" title="四、安装XWiki"></a>四、安装XWiki</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">下载xwiki-enterprise-installer-generic-9.4-standard.jar</span></span><br><span class="line">java -jar xwiki-enterprise-installer-generic-9.4-standard.jar</span><br><span class="line"></span><br><span class="line">注：此过程会提示几个问题，根据提示输入"1"或"Y"即可。默认安装目录: /usr/local/XWiki Enterprise 9.4</span><br></pre></td></tr></table></figure><p>启动XWiki</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mv /usr/local/XWiki\ Enterprise\ 9.4/ /usr/local/XWiki_Enterprise_9.4</span><br><span class="line">cd /usr/local/XWiki_Enterprise_9.4</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">XWiki 默认运行在 8080 端口，使用-p选项指定运行端口</span></span><br><span class="line">bash start_xwiki.sh -p 8888</span><br></pre></td></tr></table></figure><p><strong>Web访问: <a href="http://xx.xx.xx.xx:8888" target="_blank" rel="noopener">http://xx.xx.xx.xx:8888</a></strong></p><p>XWiki 默认的管理员用户及密码为：<br>用户名：Admin<br>密码：admin</p><h5 id="五、优化"><a href="#五、优化" class="headerlink" title="五、优化"></a>五、优化</h5><h6 id="1-supervisorctl启动管理"><a href="#1-supervisorctl启动管理" class="headerlink" title="1. supervisorctl启动管理"></a>1. supervisorctl启动管理</h6><p>cat /etc/supervisord.d/xwiki.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[program:xwiki]</span><br><span class="line">directory=/usr/local/XWiki_Enterprise_9.4</span><br><span class="line">command=/usr/local/XWiki_Enterprise_9.4/start_xwiki.sh -p 8888</span><br><span class="line">username=root</span><br><span class="line">autostart=true</span><br><span class="line">autorestart=true</span><br><span class="line">startsecs=5</span><br><span class="line">priority=1</span><br><span class="line">stopasgroup=true</span><br><span class="line">killasgroup=true</span><br></pre></td></tr></table></figure><p>注：由于是JAVA程序启动较慢，supervisor启动后耐心等待即可访问</p><h6 id="2-修改中文"><a href="#2-修改中文" class="headerlink" title="2.修改中文"></a>2.修改中文</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">点击Administer Wiki ---&gt;点击Content ---&gt; 点击Localization</span><br><span class="line">(1)第一项选择Yes</span><br><span class="line">(2)第二项选择 中文(中国)</span><br><span class="line">(3)第三项选择 中文(中国)</span><br><span class="line">(4)DATE格式： yyyy/MM/dd,HH:mm</span><br><span class="line">(5)TIMEZONE: Asia/HongKong</span><br></pre></td></tr></table></figure><h6 id="3-禁止用户注册"><a href="#3-禁止用户注册" class="headerlink" title="3. 禁止用户注册"></a>3. 禁止用户注册</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">管理WIKI ---&gt; Users &amp; Rights ---&gt; 权限：</span><br><span class="line">    -- Groups权限调整[禁止注册]</span><br><span class="line">    -- Users权限调整[禁止注册]</span><br><span class="line"></span><br><span class="line">注：Groups和Users均勾选如下选项</span><br><span class="line">yes 不论页面、空间权限如何设置，禁止非注册用户察看页面，</span><br><span class="line">yes 不论页面、空间权限如何设置，禁止非注册用户编辑页面，</span><br><span class="line">yes Require unregistered users to solve a captcha when posting a comment on a page</span><br></pre></td></tr></table></figure><h6 id="4-安装Markdown-1-2编辑器"><a href="#4-安装Markdown-1-2编辑器" class="headerlink" title="4.安装Markdown 1.2编辑器"></a>4.安装Markdown 1.2编辑器</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">搜索安装扩展：Markdown, 安装完成后，点击插件右侧的“配置”按钮</span><br><span class="line"></span><br><span class="line">编辑器改为Markdown: </span><br><span class="line">点击Administer Wiki ---&gt;点击Editing ---&gt; 选择默认文档语法为MarkDown</span><br></pre></td></tr></table></figure><h5 id="5-设置发信"><a href="#5-设置发信" class="headerlink" title="5. 设置发信"></a>5. 设置发信</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">管理WIKI ---&gt; Mail ,根据提示设置发信必要参数即可，当用户账户/密码忘记时，可通过邮箱方式找回</span><br></pre></td></tr></table></figure><h5 id="六、插件推荐"><a href="#六、插件推荐" class="headerlink" title="六、插件推荐"></a>六、插件推荐</h5><p>​       优质插件：<a href="https://extensions.xwiki.org/xwiki/bin/view/Main/#|t=extensions&p=1&l=300&s=installedCount&d=desc" target="_blank" rel="noopener">推荐</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;一、XWiki介绍&quot;&gt;&lt;a href=&quot;#一、XWiki介绍&quot; class=&quot;headerlink&quot; title=&quot;一、XWiki介绍&quot;&gt;&lt;/a&gt;一、XWiki介绍&lt;/h5&gt;&lt;p&gt;就是一个开源wiki，不像 Confluence 一样需要购买 License 才能使用&lt;/p&gt;
&lt;h5 id=&quot;二、Xwiki官网与下载&quot;&gt;&lt;a href=&quot;#二、Xwiki官网与下载&quot; class=&quot;headerlink&quot; title=&quot;二、Xwiki官网与下载&quot;&gt;&lt;/a&gt;二、Xwiki官网与下载&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;官网： &lt;a href=&quot;https://www.xwiki.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.xwiki.org/&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;XWiki下载页：&lt;a href=&quot;http://download.forge.ow2.org/xwiki/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;xwiki download&lt;/a&gt; – 检索关键字[xwiki-enterprise-installer-generic]&lt;/li&gt;
&lt;li&gt;XWwiki安装的版本：xwiki-enterprise-installer-generic-9.4&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="wiki" scheme="https://garywu520.github.io/blog/tags/wiki/"/>
    
      <category term="XWiki" scheme="https://garywu520.github.io/blog/tags/XWiki/"/>
    
      <category term="开源wiki" scheme="https://garywu520.github.io/blog/tags/%E5%BC%80%E6%BA%90wiki/"/>
    
  </entry>
  
  <entry>
    <title>部署自己的DoT DNS</title>
    <link href="https://garywu520.github.io/blog/2019/11/15/%E9%83%A8%E7%BD%B2%E8%87%AA%E5%B7%B1%E7%9A%84DoT-DNS/"/>
    <id>https://garywu520.github.io/blog/2019/11/15/部署自己的DoT-DNS/</id>
    <published>2019-11-15T02:05:04.000Z</published>
    <updated>2019-11-15T02:07:20.180Z</updated>
    
    <content type="html"><![CDATA[<h5 id="1-什么是DoT？"><a href="#1-什么是DoT？" class="headerlink" title="1. 什么是DoT？"></a>1. 什么是DoT？</h5><p>​      DoT即DNS-over-TLS, 可用于实现终端用户的隐私和安全，DoT它应该运行在853端口。因为大多数DNS客户端使用TCP或UDP协议，这些协议容易被窃听，并且容易受到中间人攻击，比如某国家的被 ISP 滥用。</p><p>​      在 RFC 7858中规定了 DNS-over-TLS 标准，这是一个非常直接的实现。 本质上，该标准规定使用现有的 DNS-over-TCP 协议支持，大多数 DNS 服务器已经具有这种支持，并向其中添加 TLS。 </p><a id="more"></a><h5 id="2-环境准备"><a href="#2-环境准备" class="headerlink" title="2. 环境准备"></a>2. 环境准备</h5><ul><li><p>非朝鲜区域 云服务器1台</p></li><li><p>自签发SSL证书 [只有企业才有资格为一个公网IP签发证书]</p><p>— 证书自签类型：ECC椭圆曲线加密 384bits</p></li><li><p>Nginx</p></li></ul><h5 id="3-实现"><a href="#3-实现" class="headerlink" title="3. 实现"></a>3. 实现</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nginx</span><br><span class="line">systemctl enable nginx</span><br><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure><p>修改nginx.conf include</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">与http区段平级</span></span><br><span class="line">include /etc/nginx/conf.d/*.conf;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">     ......</span><br><span class="line">     ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>cat  /etc/nginx/conf.d/dot.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">stream &#123;</span><br><span class="line"></span><br><span class="line">  upstream dns-servers &#123;</span><br><span class="line">    server    8.8.8.8:53;</span><br><span class="line">    server    8.8.4.4:53;</span><br><span class="line">    server    1.1.1.1:53;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  server &#123;</span><br><span class="line">        listen 853 ssl;</span><br><span class="line">        proxy_pass dns-servers;</span><br><span class="line"></span><br><span class="line">        ssl_session_cache shared:SSL:10m;</span><br><span class="line">        ssl_session_timeout 10m;</span><br><span class="line">        ssl_protocols  TLSv1.2;</span><br><span class="line">        ssl_prefer_server_ciphers on;</span><br><span class="line">        ssl_certificate     /etc/nginx/ssl/server.crt;</span><br><span class="line">        ssl_certificate_key /etc/nginx/ssl/server.key;</span><br><span class="line">        ssl_trusted_certificate /etc/nginx/ssl/fullchain.crt;</span><br><span class="line">        ssl_dhparam /etc/nginx/ssl/dhparam.pem;</span><br><span class="line">        ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384";</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：upstream代理的DNS可以是内网DNS主从，也可代理现有墙外DNS</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><p>验证端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> netstat -lntup|grep 853</span></span><br><span class="line">tcp     0      0 0.0.0.0:853       0.0.0.0:*    LISTEN      21751/nginx: master</span><br></pre></td></tr></table></figure><h5 id="4-朝鲜网络–dig测试"><a href="#4-朝鲜网络–dig测试" class="headerlink" title="4. 朝鲜网络–dig测试"></a>4. 朝鲜网络–dig测试</h5><ul><li><p>配置本地unbound代理 这台Server 853端口</p></li><li><p>dig测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">本地unbound解析</span></span><br><span class="line">[root@test ~]# dig flickr.com @127.0.0.1</span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.4-P2-RedHat-9.11.4-9.P2.el7 &lt;&lt;&gt;&gt; flickr.com @127.0.0.1</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">flickr.com.60INA13.226.113.74</span><br><span class="line"></span><br><span class="line">;; Query time: 380 msec</span><br><span class="line">;; SERVER: 127.0.0.1#53(127.0.0.1)</span><br><span class="line">;; WHEN: Thu Nov 14 18:58:01 CST 2019</span><br><span class="line">;; MSG SIZE  rcvd: 55</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">非朝鲜网络解析</span></span><br><span class="line">[root@ns ~]# dig flickr.com @1.1.1.1</span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.4-P2-RedHat-9.11.4-9.P2.el7 &lt;&lt;&gt;&gt; flickr.com @1.1.1.1</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">flickr.com.29INA13.226.113.74</span><br><span class="line"></span><br><span class="line">;; Query time: 1 msec</span><br><span class="line">;; SERVER: 1.1.1.1#53(1.1.1.1)</span><br><span class="line">;; WHEN: Thu Nov 14 05:58:32 EST 2019</span><br><span class="line">;; MSG SIZE  rcvd: 55</span><br></pre></td></tr></table></figure><p>可以看出解析结果数据一致，解析结果未被污染</p></li></ul><h5 id="5-安全建议"><a href="#5-安全建议" class="headerlink" title="5. 安全建议"></a>5. 安全建议</h5><p>​    由于无法得到基于IP的安全证书，所以只能寄托于自签，自签时长建议缩短以天为单位，通过shell脚本自动更新来防止中间人攻击。</p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;1-什么是DoT？&quot;&gt;&lt;a href=&quot;#1-什么是DoT？&quot; class=&quot;headerlink&quot; title=&quot;1. 什么是DoT？&quot;&gt;&lt;/a&gt;1. 什么是DoT？&lt;/h5&gt;&lt;p&gt;​      DoT即DNS-over-TLS, 可用于实现终端用户的隐私和安全，DoT它应该运行在853端口。因为大多数DNS客户端使用TCP或UDP协议，这些协议容易被窃听，并且容易受到中间人攻击，比如某国家的被 ISP 滥用。&lt;/p&gt;
&lt;p&gt;​      在 RFC 7858中规定了 DNS-over-TLS 标准，这是一个非常直接的实现。 本质上，该标准规定使用现有的 DNS-over-TCP 协议支持，大多数 DNS 服务器已经具有这种支持，并向其中添加 TLS。 &lt;/p&gt;
    
    </summary>
    
    
      <category term="DNS" scheme="https://garywu520.github.io/blog/tags/DNS/"/>
    
      <category term="SSL" scheme="https://garywu520.github.io/blog/tags/SSL/"/>
    
      <category term="DoT" scheme="https://garywu520.github.io/blog/tags/DoT/"/>
    
      <category term="DoH" scheme="https://garywu520.github.io/blog/tags/DoH/"/>
    
      <category term="TLS" scheme="https://garywu520.github.io/blog/tags/TLS/"/>
    
  </entry>
  
  <entry>
    <title>openssl自签ECC V3证书</title>
    <link href="https://garywu520.github.io/blog/2019/11/12/openssl%E8%87%AA%E7%AD%BEECC-V3%E8%AF%81%E4%B9%A6/"/>
    <id>https://garywu520.github.io/blog/2019/11/12/openssl自签ECC-V3证书/</id>
    <published>2019-11-12T10:29:06.000Z</published>
    <updated>2019-11-14T06:48:30.823Z</updated>
    
    <content type="html"><![CDATA[<p>前提：为支持更强的加密，建议升级openssl到最新版</p><h5 id="1-生成CA根证书"><a href="#1-生成CA根证书" class="headerlink" title="1. 生成CA根证书"></a>1. 生成CA根证书</h5><p>首先要准备一个配置文件和一个目录，稍后需要用第3版的证书[支持DNS域名和IP，浏览器可以校验证书里面的DNS是不是和网站实际的域名一样]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">serial 文件是openssl管理颁发序号的,index.txt是对newcerts下面新签发的证书的一个简单索引</span></span><br><span class="line">mkdir ssl &amp;&amp; cd ssl</span><br><span class="line">touch index.txt</span><br><span class="line">echo 01 &gt; serial</span><br></pre></td></tr></table></figure><a id="more"></a><p>cat openssl1.cnf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">注：创建根证书的时候使用的参数是“basicConstraints = CA:<span class="literal">true</span>”</span></span><br><span class="line"><span class="meta">#</span><span class="bash">basicConstraints = CA:<span class="literal">true</span>” 表示创建的是“根证书”</span></span><br><span class="line"></span><br><span class="line">[req]</span><br><span class="line">req_extensions = v3_req</span><br><span class="line">distinguished_name = req_distinguished_name</span><br><span class="line"></span><br><span class="line">[req_distinguished_name]</span><br><span class="line">countryName         = HK</span><br><span class="line">stateOrProvinceName = TLW</span><br><span class="line">localityName        = TLW</span><br><span class="line"></span><br><span class="line">[ v3_req ]</span><br><span class="line">basicConstraints = CA:FALSE</span><br><span class="line">keyUsage = nonRepudiation, digitalSignature, keyEncipherment</span><br><span class="line">subjectAltName = @alt_names</span><br><span class="line"></span><br><span class="line">[alt_names]</span><br><span class="line"><span class="meta">#</span><span class="bash">DNS.1 = server1.example.com</span></span><br><span class="line"><span class="meta">#</span><span class="bash">DNS.2 = mail.example.com</span></span><br><span class="line"><span class="meta">#</span><span class="bash">DNS.3 = www.example.com</span></span><br><span class="line">IP.1 = xx.xx.xx.xx</span><br><span class="line"><span class="meta">#</span><span class="bash">IP.2 = xx.xx.xx.xx</span></span><br><span class="line"></span><br><span class="line">[ v3_ca ]</span><br><span class="line">basicConstraints = CA:true</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">创建根CA的私钥，加密强度为prime256v1</span></span><br><span class="line">openssl ecparam -genkey -name prime256v1 -out ca.key</span><br><span class="line">注：prime256v1为加密强度，可通过命令查看：openssl ecparam -list_curves</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">创建SHA-512自签名的根CA证书（CA certificate）</span></span><br><span class="line">openssl req -passout pass:"password" -new -sha512 -x509 -days 3650 -config openssl1.cnf -extensions v3_ca -key ca.key -out ca.crt -subj "//C=CN\ST=HongKong\L=HongKong\O=My Company\OU=My Department\CN=Heath\emailAddress=hkjs@hk.com"</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">验证CA certificate是否符合要求</span></span><br><span class="line">openssl x509 -text -noout -in ca.crt</span><br></pre></td></tr></table></figure><h5 id="2-生成域名证书的签名请求"><a href="#2-生成域名证书的签名请求" class="headerlink" title="2. 生成域名证书的签名请求"></a>2. 生成域名证书的签名请求</h5><p>创建域名证书所需的cnf文件</p><p>cat openssl2.cnf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">修改basicConstraints = CA:<span class="literal">false</span>” 表示创建的是“非根证书”，即普通证书</span></span><br><span class="line"></span><br><span class="line">[req]</span><br><span class="line">req_extensions = v3_req</span><br><span class="line">distinguished_name = req_distinguished_name</span><br><span class="line"></span><br><span class="line">[req_distinguished_name]</span><br><span class="line">countryName         = HK</span><br><span class="line">stateOrProvinceName = TLW</span><br><span class="line">localityName        = TLW</span><br><span class="line"></span><br><span class="line">[v3_req]</span><br><span class="line">basicConstraints = CA:FALSE</span><br><span class="line">keyUsage = nonRepudiation, digitalSignature, keyEncipherment</span><br><span class="line">subjectAltName = @alt_names</span><br><span class="line"></span><br><span class="line">[alt_names]</span><br><span class="line"><span class="meta">#</span><span class="bash">DNS.1 = server1.example.com</span></span><br><span class="line"><span class="meta">#</span><span class="bash">DNS.2 = mail.example.com</span></span><br><span class="line"><span class="meta">#</span><span class="bash">DNS.3 = www.example.com</span></span><br><span class="line">IP.1 = xx.xx.xx.xx</span><br><span class="line"><span class="meta">#</span><span class="bash">IP.2 = xx.xx.xx.xx</span></span><br><span class="line"></span><br><span class="line">[v3_ca]</span><br><span class="line">basicConstraints = CA:FALSE</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">生成域名使用的server.key文件</span></span><br><span class="line">openssl ecparam -genkey -name prime256v1 -out server.key</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">生成server.csr文件</span></span><br><span class="line">openssl req -passout pass:"password" -new -sha512 -key server.key -out server.csr -extensions v3_req -config openssl2.cnf -subj "//C=CN\ST=HongKong\L=HongKong\O=My Company\OU=My Department\CN=Heath\emailAddress=hkjs@hk.com"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">验证DNS信息是否存在了X509v3 Subject Alternative Name里面</span></span><br><span class="line"><span class="meta">#</span><span class="bash">确保签名类型为“非根CA”类型，X509v3 Basic Constraints: CA:FALSE</span></span><br><span class="line">openssl req -text -noout -in server.csr</span><br></pre></td></tr></table></figure><h5 id="3-使用CA签名"><a href="#3-使用CA签名" class="headerlink" title="3. 使用CA签名"></a>3. 使用CA签名</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">签名之前需要进行如下操作</span></span><br><span class="line">cp /usr/local/ssl/openssl.cnf /root/ssl/</span><br></pre></td></tr></table></figure><p>vim openssl.cnf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">修改CA目录</span></span><br><span class="line">[ CA_default ]</span><br><span class="line">dir = /root/ssl</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">修改CA策略</span></span><br><span class="line">[ policy_match ]</span><br><span class="line">countryName             = optional</span><br><span class="line">stateOrProvinceName     = optional</span><br><span class="line">organizationName        = optional</span><br><span class="line">organizationalUnitName  = optional</span><br><span class="line">commonName              = optional</span><br><span class="line">emailAddress            = optional</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">用根ca.crt 来给server.csr签名，生成server.crt文件</span></span><br><span class="line">openssl ca -days 3650 -cert ca.crt -keyfile ca.key -md sha512 -extensions v3_req -config openssl.cnf -in server.csr -out server.crt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">注：如果提示部分目录或文件不存在，根据提示创建即可</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">验证证书有效性</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> openssl verify -verbose -CAfile ca.crt server.crt</span></span><br><span class="line">server.crt: OK</span><br></pre></td></tr></table></figure><h5 id="4-生成fullchain证书"><a href="#4-生成fullchain证书" class="headerlink" title="4. 生成fullchain证书"></a>4. 生成fullchain证书</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">将泛域名证书server.crt和根域名证书ca.crt合并为fullchain证书</span></span><br><span class="line">cat server.crt ca.crt &gt;fullchain.crt</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前提：为支持更强的加密，建议升级openssl到最新版&lt;/p&gt;
&lt;h5 id=&quot;1-生成CA根证书&quot;&gt;&lt;a href=&quot;#1-生成CA根证书&quot; class=&quot;headerlink&quot; title=&quot;1. 生成CA根证书&quot;&gt;&lt;/a&gt;1. 生成CA根证书&lt;/h5&gt;&lt;p&gt;首先要准备一个配置文件和一个目录，稍后需要用第3版的证书[支持DNS域名和IP，浏览器可以校验证书里面的DNS是不是和网站实际的域名一样]&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;serial 文件是openssl管理颁发序号的,index.txt是对newcerts下面新签发的证书的一个简单索引&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir ssl &amp;amp;&amp;amp; cd ssl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch index.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo 01 &amp;gt; serial&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="https" scheme="https://garywu520.github.io/blog/tags/https/"/>
    
      <category term="openssl" scheme="https://garywu520.github.io/blog/tags/openssl/"/>
    
      <category term="ssl" scheme="https://garywu520.github.io/blog/tags/ssl/"/>
    
      <category term="eccdsa" scheme="https://garywu520.github.io/blog/tags/eccdsa/"/>
    
      <category term="ECC" scheme="https://garywu520.github.io/blog/tags/ECC/"/>
    
  </entry>
  
  <entry>
    <title>nginx代理websocket配置</title>
    <link href="https://garywu520.github.io/blog/2019/11/12/nginx%E4%BB%A3%E7%90%86websocket%E9%85%8D%E7%BD%AE/"/>
    <id>https://garywu520.github.io/blog/2019/11/12/nginx代理websocket配置/</id>
    <published>2019-11-12T08:39:25.000Z</published>
    <updated>2019-11-12T08:41:44.517Z</updated>
    
    <content type="html"><![CDATA[<h5 id="1-nginx配置"><a href="#1-nginx配置" class="headerlink" title="1. nginx配置"></a>1. nginx配置</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"> #</span><span class="bash">注：7010为研发上线的websockt服务端口</span></span><br><span class="line"> location /wsfuture/ &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:7010;</span><br><span class="line"></span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection "upgrade";</span><br><span class="line">         </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">注：这里的wsfuture指的是研发提供的websocket服务程序的顶级目录，因为如果在此基础上添加二级目录访问出现404</span></span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="2-本地测试"><a href="#2-本地测试" class="headerlink" title="2. 本地测试"></a>2. 本地测试</h5><ul><li><p>安装nodejs和npm[略]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure></li><li><p>初始化npm</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">初始化npm来生成package.json文件</span></span><br><span class="line">npm init --yes</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">安装ws模块</span></span><br><span class="line">npm install ws --save</span><br><span class="line">npm install websocket --save</span><br></pre></td></tr></table></figure></li><li><p>本地连接测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">出现如下提示，说明连接正常</span></span><br><span class="line"><span class="meta">$</span><span class="bash">wscat --connect ws://127.0.0.1/wsfuture/IdglKTUUecw=</span></span><br><span class="line">Connected (press CTRL+C to quit)</span><br><span class="line">&lt;</span><br></pre></td></tr></table></figure><p>如果出现错误：error: Unexpected server response: 404 说明nginx代理路径设置不正确。</p></li></ul><h5 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h5><ul><li>如果以上项目测试失败，需要linux模拟websocket服务端和客户端，来验证nginx代理websocket的功能的话，参考如下</li></ul><p>参考：<a href="https://yq.aliyun.com/articles/481455" target="_blank" rel="noopener">云栖社区</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;1-nginx配置&quot;&gt;&lt;a href=&quot;#1-nginx配置&quot; class=&quot;headerlink&quot; title=&quot;1. nginx配置&quot;&gt;&lt;/a&gt;1. nginx配置&lt;/h5&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt; #&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;注：7010为研发上线的websockt服务端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; location /wsfuture/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_pass http://127.0.0.1:7010;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_http_version 1.1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_set_header Upgrade $http_upgrade;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_set_header Connection &quot;upgrade&quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;注：这里的wsfuture指的是研发提供的websocket服务程序的顶级目录，因为如果在此基础上添加二级目录访问出现404&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="nginx" scheme="https://garywu520.github.io/blog/tags/nginx/"/>
    
      <category term="websocket" scheme="https://garywu520.github.io/blog/tags/websocket/"/>
    
      <category term="ws" scheme="https://garywu520.github.io/blog/tags/ws/"/>
    
      <category term="wss" scheme="https://garywu520.github.io/blog/tags/wss/"/>
    
      <category term="nodejs" scheme="https://garywu520.github.io/blog/tags/nodejs/"/>
    
      <category term="wscat" scheme="https://garywu520.github.io/blog/tags/wscat/"/>
    
  </entry>
  
  <entry>
    <title>为https站点启用http2特性</title>
    <link href="https://garywu520.github.io/blog/2019/11/08/%E4%B8%BAhttps%E7%AB%99%E7%82%B9%E5%90%AF%E7%94%A8http2%E7%89%B9%E6%80%A7/"/>
    <id>https://garywu520.github.io/blog/2019/11/08/为https站点启用http2特性/</id>
    <published>2019-11-08T12:59:58.000Z</published>
    <updated>2019-11-08T13:10:08.567Z</updated>
    
    <content type="html"><![CDATA[<h5 id="1-HTTP-2简介"><a href="#1-HTTP-2简介" class="headerlink" title="1. HTTP/2简介"></a>1. HTTP/2简介</h5><p> <code>HTTP/2</code>（超文本传输协议第2版，最初命名为 HTTP 2.0），是HTTP协议的的第二个主要版本，使用于万维网。<code>HTTP/2</code> 是 HTTP 协议自 1999 年 HTTP 1.1 发布后的首个更新，主要基于 SPDY 协议。它由互联网工程任务组 (IETF) 的 <code>Hypertext Transfer Protocol Bis</code> (httpbis) 工作小组进行开发。该组织于2014年12月将 <code>HTTP/2</code> 标准提议递交至IESG进行讨论，于2015年2月17日被批准。<code>HTTP/2</code> 标准于2015年5月以 <code>RFC 7540</code> 正式发表。 </p><a id="more"></a><h5 id="2-HTTP-2特点"><a href="#2-HTTP-2特点" class="headerlink" title="2. HTTP/2特点"></a>2. HTTP/2特点</h5><ul><li>采用二进制格式传输数据，而非文本格式。二进制格式在协议的解析和优化扩展上带来更多的优势和可能。</li><li>对消息头进行压缩传输，能够节省消息头占用的网络的流量，而 <code>HTTP 1.1</code> 每次请求，都会携带大量冗余头信息，浪费了很多带宽资源，头压缩能够很好的解决该问题。</li><li>多路复用，就是多个请求都是通过一个 TCP 连接并发完成， <code>HTTP 1.1</code> 虽然通过 <code>pipeline</code> 也能并发请求，但是多个请求之间的响应会被阻塞的，所以 <code>pipeline</code> 至今也没有被普及应用，而 <code>HTTP/2</code> 做到了真正的并发请求，同时流还支持优先级和流量控制。</li><li>服务器推送，服务端能够更快的把资源推送给客户端，例如服务端可以主动把 <code>JS</code> 和 <code>CSS</code> 文件推送给客户端，而不需要客户端解析 HTML 再发送这些请求，当客户端需要的时候，它已经在客户端了。</li></ul><h5 id="3-HTTP-2站点的优势"><a href="#3-HTTP-2站点的优势" class="headerlink" title="3.  HTTP/2站点的优势"></a>3.  <strong>HTTP/2站点的优势</strong></h5><ul><li>提升网站访问速度。</li><li>降低服务器压力。</li><li>部分替代异步加载的使用。</li><li>保护网站安全。</li></ul><h5 id="4-硬核要求"><a href="#4-硬核要求" class="headerlink" title="4. 硬核要求"></a>4. 硬核要求</h5><ul><li>Nginx ＞1.9.5【nginx编译的时候需要指定新版本的openssl, –with-openssl=源码包解压目录】</li><li>OpenSSL＞1.0.2</li><li>因为 <code>HTTP/2</code> 不仅需要Web服务器还需要一个扩展支持，目前可以用的有 <code>ALPN</code> 和 <code>NPN</code> 两种(Chrome 已经移除了对 <code>NPN</code> 的支持)。只有 OpenSSL 1.0.2 以上版本才开始支持 <code>ALPN</code> 。 </li><li>仅支持HTTPS</li></ul><h5 id="5-在Nginx上启用HTTP-2"><a href="#5-在Nginx上启用HTTP-2" class="headerlink" title="5. 在Nginx上启用HTTP/2"></a>5. 在Nginx上启用HTTP/2</h5><p> 配置 Nginx 开启 <code>HTTP/2</code> 特别简单，在 <code>server</code> 配置段中的 <code>listen</code> 后增加 <code>http2</code> 即可 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span></span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">  listen 443 ssl http2;</span><br><span class="line">  server_name www.hi-linux.com;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 重启 Nginx 后，让配置生效。 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><h5 id="6-命令验证HTTP-2"><a href="#6-命令验证HTTP-2" class="headerlink" title="6. 命令验证HTTP/2"></a>6. 命令验证HTTP/2</h5><p>升级curl</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">下载release</span></span><br><span class="line">rpm -Uvh  http://www.city-fan.org/ftp/contrib/yum-repo/rhel6/x86_64/city-fan.org-release-2-1.rhel6.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看最新版本</span></span><br><span class="line">yum --showduplicates list curl --disablerepo="*" --enablerepo="city*"</span><br></pre></td></tr></table></figure><p> vi /etc/yum.repos.d/city-fan.org.repo </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">将[city-fan.org]组的<span class="built_in">enable</span>值改为1,保存</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum install curl</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> curl -V</span></span><br><span class="line">curl 7.67.0</span><br></pre></td></tr></table></figure><p>验证网站是否支持HTTP/2</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> curl --http2 -I https://xxx.net</span></span><br><span class="line">HTTP/2 200</span><br></pre></td></tr></table></figure><p>web检测是否支持HTTP/2:</p><ul><li><strong>KeyCDN: <a href="https://tools.keycdn.com/http2-test" target="_blank" rel="noopener">http2-test</a></strong></li><li><strong>MySSL: <a href="https://myssl.com/http2_check.html" target="_blank" rel="noopener">http2_check</a></strong></li></ul><h5 id="7-浏览器支持"><a href="#7-浏览器支持" class="headerlink" title="7. 浏览器支持"></a>7. 浏览器支持</h5><p>目前支持 HTTP/2 浏览器列表</p><ul><li><p>Google Chrome、Mozilla Firefox、Microsoft Edge和Opera已支持HTTP/2，并默认启用。</p></li><li><p>Internet Explorer自IE 11开始支持HTTP/2，并预设激活</p></li></ul><p>​    更详细的浏览器列表可参考：<a href="http://caniuse.com/#feat=http2" target="_blank" rel="noopener">http://caniuse.com/#feat=http2</a> </p><p>部分文章参考：<a href="https://www.hi-linux.com/posts/24162.html" target="_blank" rel="noopener">运维之美</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;1-HTTP-2简介&quot;&gt;&lt;a href=&quot;#1-HTTP-2简介&quot; class=&quot;headerlink&quot; title=&quot;1. HTTP/2简介&quot;&gt;&lt;/a&gt;1. HTTP/2简介&lt;/h5&gt;&lt;p&gt; &lt;code&gt;HTTP/2&lt;/code&gt;（超文本传输协议第2版，最初命名为 HTTP 2.0），是HTTP协议的的第二个主要版本，使用于万维网。&lt;code&gt;HTTP/2&lt;/code&gt; 是 HTTP 协议自 1999 年 HTTP 1.1 发布后的首个更新，主要基于 SPDY 协议。它由互联网工程任务组 (IETF) 的 &lt;code&gt;Hypertext Transfer Protocol Bis&lt;/code&gt; (httpbis) 工作小组进行开发。该组织于2014年12月将 &lt;code&gt;HTTP/2&lt;/code&gt; 标准提议递交至IESG进行讨论，于2015年2月17日被批准。&lt;code&gt;HTTP/2&lt;/code&gt; 标准于2015年5月以 &lt;code&gt;RFC 7540&lt;/code&gt; 正式发表。 &lt;/p&gt;
    
    </summary>
    
    
      <category term="Nginx" scheme="https://garywu520.github.io/blog/tags/Nginx/"/>
    
      <category term="HTTPS" scheme="https://garywu520.github.io/blog/tags/HTTPS/"/>
    
      <category term="HTTP" scheme="https://garywu520.github.io/blog/tags/HTTP/"/>
    
      <category term="http1.1" scheme="https://garywu520.github.io/blog/tags/http1-1/"/>
    
      <category term="http2" scheme="https://garywu520.github.io/blog/tags/http2/"/>
    
  </entry>
  
  <entry>
    <title>zimbra邮件服务器</title>
    <link href="https://garywu520.github.io/blog/2019/10/30/zimbra%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://garywu520.github.io/blog/2019/10/30/zimbra邮件服务器/</id>
    <published>2019-10-30T09:28:06.000Z</published>
    <updated>2019-10-30T09:29:50.344Z</updated>
    
    <content type="html"><![CDATA[<p>zimbra是企业级的电子邮件、日历和办公协作的解决方案。Zimbra Collaboration Suite【简称ZCS】包括Zimbra MTA、 Zimbra LDAP Server和Zimbra Mail Server. 本次演示的是其开源版本</p><h5 id="一、先决条件"><a href="#一、先决条件" class="headerlink" title="一、先决条件"></a>一、先决条件</h5><ul><li><p>干净的CentOS7</p></li><li><p>没有运行HTTP，MAIL，DNS，MySQL及LDAP服务</p></li><li><p>提前准备域名并将A记录和MX DNS记录解析到本Zimbra服务器</p></li><li><p>配置FQDN</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo "39.xx.xx.26  zimbra.domain.com" &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hostname</span></span><br><span class="line">zimbra.domain.com</span><br></pre></td></tr></table></figure><a id="more"></a></li></ul><h5 id="二、安装依赖"><a href="#二、安装依赖" class="headerlink" title="二、安装依赖"></a>二、安装依赖</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install perl-core unzip libaio nmap-ncat sysstat openssh-clients wget</span><br></pre></td></tr></table></figure><h5 id="三、下载Zimbra-Collaboaration-Suite-tarball"><a href="#三、下载Zimbra-Collaboaration-Suite-tarball" class="headerlink" title="三、下载Zimbra Collaboaration Suite tarball"></a>三、下载Zimbra Collaboaration Suite tarball</h5><p>官方下载页面：  <a href="https://www.zimbra.com/downloads/zimbra-collaboration-open-source/" target="_blank" rel="noopener">Zimbra Collaboration Suite download page</a>  </p><p>填写基本信息，产品选择：Zimbra Collaboration – Open Source Edition ，之后便跳转到了下载页面，选择平台CentOS7, 点击x64_86 开始下载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">下载</span></span><br><span class="line">wget https://files.zimbra.com/downloads/8.8.15_GA/zcs-8.8.15_GA_3869.RHEL7_64.20190918004220.tgz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">解压</span></span><br><span class="line">tar -zxf zcs-8.8.15_GA_3869.RHEL7_64.20190918004220.tgz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">安装Zimbra</span></span><br><span class="line">cd zcs-8.8.15_GA_3869.RHEL7_64.20190918004220</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">它首先会检查以前是否安装过zimbra,然后提示你是否同意EULA的条款，输入“y” 来接受许可证。</span></span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">PLEASE READ THIS AGREEMENT CAREFULLY BEFORE USING THE SOFTWARE.</span><br><span class="line">SYNACOR, INC. ("SYNACOR") WILL ONLY LICENSE THIS SOFTWARE TO YOU IF YOU</span><br><span class="line">FIRST ACCEPT THE TERMS OF THIS AGREEMENT. BY DOWNLOADING OR INSTALLING</span><br><span class="line">THE SOFTWARE, OR USING THE PRODUCT, YOU ARE CONSENTING TO BE BOUND BY</span><br><span class="line">THIS AGREEMENT. IF YOU DO NOT AGREE TO ALL OF THE TERMS OF THIS</span><br><span class="line">AGREEMENT, THEN DO NOT DOWNLOAD, INSTALL OR USE THE PRODUCT.</span><br><span class="line"></span><br><span class="line">License Terms for this Zimbra Collaboration Suite Software:</span><br><span class="line">https://www.zimbra.com/license/zimbra-public-eula-2-6.html</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Do you agree with the terms of the software license agreement? [N] y</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">接下来会提示你是否使用zimbra软件包存储库</span></span><br><span class="line">..</span><br><span class="line">Use Zimbra's package repository [Y] y</span><br><span class="line"></span><br><span class="line">Importing Zimbra GPG key</span><br><span class="line"></span><br><span class="line">Configuring package repository</span><br><span class="line"></span><br><span class="line">Checking for installable packages</span><br><span class="line">...</span><br><span class="line"><span class="meta">#</span><span class="bash">输入Enter键继续安装zimbra</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">Select the packages to install</span><br><span class="line"></span><br><span class="line">Install zimbra-ldap [Y] y</span><br><span class="line"></span><br><span class="line">Install zimbra-logger [Y] y</span><br><span class="line"></span><br><span class="line">Install zimbra-mta [Y] y</span><br><span class="line"></span><br><span class="line">Install zimbra-dnscache [Y] y</span><br><span class="line"></span><br><span class="line">Install zimbra-snmp [Y] y</span><br><span class="line"></span><br><span class="line">Install zimbra-store [Y] y</span><br><span class="line"></span><br><span class="line">Install zimbra-apache [Y] y</span><br><span class="line"></span><br><span class="line">Install zimbra-spell [Y] y</span><br><span class="line"></span><br><span class="line">Install zimbra-memcached [Y] y</span><br><span class="line"></span><br><span class="line">Install zimbra-proxy [Y] y</span><br><span class="line"></span><br><span class="line">Install zimbra-drive [Y] y</span><br><span class="line"></span><br><span class="line">Install zimbra-imapd (BETA - for evaluation only) [N] </span><br><span class="line"></span><br><span class="line">Install zimbra-chat [Y] y</span><br><span class="line">Checking required space for zimbra-core</span><br><span class="line">Checking space for zimbra-store</span><br><span class="line">Checking required packages for zimbra-store</span><br><span class="line">zimbra-store package check complete.</span><br><span class="line"></span><br><span class="line">Installing:</span><br><span class="line">    zimbra-core</span><br><span class="line">    zimbra-ldap</span><br><span class="line">    zimbra-logger</span><br><span class="line">    zimbra-mta</span><br><span class="line">    zimbra-dnscache</span><br><span class="line">    zimbra-snmp</span><br><span class="line">    zimbra-store</span><br><span class="line">    zimbra-apache</span><br><span class="line">    zimbra-spell</span><br><span class="line">    zimbra-memcached</span><br><span class="line">    zimbra-proxy</span><br><span class="line">    zimbra-drive</span><br><span class="line">    zimbra-patch</span><br><span class="line">    zimbra-mta-patch</span><br><span class="line">    zimbra-proxy-patch</span><br><span class="line">    zimbra-chat</span><br><span class="line">...</span><br><span class="line"><span class="meta">#</span><span class="bash">之后系统会提示你是否允许修改系统来安装这些组件，输入“y”,然后按Enter键继续。</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 如果遇到DNS错误，只需要修改域名并继续</span></span><br><span class="line">...</span><br><span class="line">DNS ERROR resolving MX for zimbra.domain.com</span><br><span class="line">It is suggested that the domain name have an MX record configured in DNS</span><br><span class="line"></span><br><span class="line">Change domain name? [Yes] yes</span><br><span class="line">Create domain: [zimbra.domain.com] domain.com</span><br><span class="line">...</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下面通过选择 “选项7”来修改Admin密码</span></span><br><span class="line">...</span><br><span class="line">Main menu</span><br><span class="line"></span><br><span class="line">   1) Common Configuration:                                                  </span><br><span class="line">   2) zimbra-ldap:                             Enabled                       </span><br><span class="line">   3) zimbra-logger:                           Enabled                       </span><br><span class="line">   4) zimbra-mta:                              Enabled                       </span><br><span class="line">   5) zimbra-dnscache:                         Enabled                       </span><br><span class="line">   6) zimbra-snmp:                             Enabled                       </span><br><span class="line">   7) zimbra-store:                            Enabled                       </span><br><span class="line">        +Create Admin User:                    yes                           </span><br><span class="line">        +Admin user to create:                 admin@domain.com           </span><br><span class="line">******* +Admin Password                        UNSET  </span><br><span class="line">......</span><br><span class="line">Address unconfigured (**) items  (? - help) 7</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">通过选项4，可以设置自己的密码，当然也可以保留默认值</span></span><br><span class="line">...</span><br><span class="line">Store configuration</span><br><span class="line"></span><br><span class="line">   1) Status:                                  Enabled                       </span><br><span class="line">   2) Create Admin User:                       yes                           </span><br><span class="line">   3) Admin user to create:                    admin@domain.com           </span><br><span class="line">** 4) Admin Password                           UNSET      </span><br><span class="line">Select, or 'r' for previous menu [r] 4</span><br><span class="line"></span><br><span class="line">Password for admin@domain.com (min 6 characters): [sIyXczeI6] MyStrongP</span><br></pre></td></tr></table></figure><p>返回上一个菜单并应用更改并继续进行zimbra配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">Select, or 'r' for previous menu [r] r</span><br><span class="line"></span><br><span class="line">Main menu</span><br><span class="line"></span><br><span class="line">   1) Common Configuration:                                                  </span><br><span class="line">   2) zimbra-ldap:                             Enabled                       </span><br><span class="line">   3) zimbra-logger:                           Enabled                       </span><br><span class="line">   4) zimbra-mta:                              Enabled                       </span><br><span class="line">   5) zimbra-dnscache:                         Enabled                       </span><br><span class="line">   6) zimbra-snmp:                             Enabled                       </span><br><span class="line">   7) zimbra-store:                            Enabled                       </span><br><span class="line">   8) zimbra-spell:                            Enabled                       </span><br><span class="line">   9) zimbra-proxy:                            Enabled                       </span><br><span class="line">  10) Default Class of Service Configuration:                                </span><br><span class="line">   s) Save config to file                                                    </span><br><span class="line">   x) Expand menu                                                            </span><br><span class="line">   q) Quit                                    </span><br><span class="line"></span><br><span class="line">*** CONFIGURATION COMPLETE - press 'a' to apply</span><br><span class="line">Select from menu, or press 'a' to apply config (? - help) a</span><br><span class="line">Save configuration data to a file? [Yes] yes</span><br><span class="line">Save config in file: [/opt/zimbra/config.18030] </span><br><span class="line">Saving config in /opt/zimbra/config.18030...done.</span><br><span class="line">The system will be modified - continue? [No] yes</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>安装完成后，系统会提示你是否生成安装日志，输入[Yes]</p><h5 id="四、访问Access-Zimbra-Web-UI"><a href="#四、访问Access-Zimbra-Web-UI" class="headerlink" title="四、访问Access Zimbra Web UI"></a>四、访问Access Zimbra Web UI</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">Zimbra管理控制台</span></span><br><span class="line">https://zimbra.domain.com:7071     账号：admin   密码：你上面设置的密码</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">Zimbra客户端</span></span><br><span class="line">https://zimbra.domain.com</span><br></pre></td></tr></table></figure><p>Zimbra现在已安装并可以运行。 现在，您可以通过安装合法的SSL / TLS证书，添加和管理帐户以及其他任务来开始使用。</p><h5 id="五、卸载"><a href="#五、卸载" class="headerlink" title="五、卸载"></a>五、卸载</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd zcs-8.8.15_GA_3869.RHEL7_64.20190918004220</span><br><span class="line">./install.sh -u</span><br></pre></td></tr></table></figure><h5 id="六、zimbra邮件管理"><a href="#六、zimbra邮件管理" class="headerlink" title="六、zimbra邮件管理"></a>六、zimbra邮件管理</h5><p>参考：<a href="https://www.cnblogs.com/awakenedy/articles/10696370.html" target="_blank" rel="noopener">Awakenedy</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;zimbra是企业级的电子邮件、日历和办公协作的解决方案。Zimbra Collaboration Suite【简称ZCS】包括Zimbra MTA、 Zimbra LDAP Server和Zimbra Mail Server. 本次演示的是其开源版本&lt;/p&gt;
&lt;h5 id=&quot;一、先决条件&quot;&gt;&lt;a href=&quot;#一、先决条件&quot; class=&quot;headerlink&quot; title=&quot;一、先决条件&quot;&gt;&lt;/a&gt;一、先决条件&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;干净的CentOS7&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;没有运行HTTP，MAIL，DNS，MySQL及LDAP服务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;提前准备域名并将A记录和MX DNS记录解析到本Zimbra服务器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置FQDN&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;echo &quot;39.xx.xx.26  zimbra.domain.com&quot; &amp;gt;&amp;gt; /etc/hosts&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; hostname&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zimbra.domain.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="mail" scheme="https://garywu520.github.io/blog/tags/mail/"/>
    
      <category term="zimbra" scheme="https://garywu520.github.io/blog/tags/zimbra/"/>
    
      <category term="邮件服务器" scheme="https://garywu520.github.io/blog/tags/%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="ZCS" scheme="https://garywu520.github.io/blog/tags/ZCS/"/>
    
  </entry>
  
  <entry>
    <title>redis key批量清理</title>
    <link href="https://garywu520.github.io/blog/2019/10/29/redis-key%E6%89%B9%E9%87%8F%E6%B8%85%E7%90%86/"/>
    <id>https://garywu520.github.io/blog/2019/10/29/redis-key批量清理/</id>
    <published>2019-10-29T08:04:32.000Z</published>
    <updated>2019-10-29T08:06:32.039Z</updated>
    
    <content type="html"><![CDATA[<p>获取key到文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 127.0.0.1 -p 6379 -a "password" keys kline_* &gt;/root/keys.log</span><br></pre></td></tr></table></figure><p>删除key</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">while read LINE</span><br><span class="line">do</span><br><span class="line">    redis-cli -h 127.0.0.1 -p 6379 -a "password" del $LINE</span><br><span class="line">done &lt; /root/keys.log</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;获取key到文件&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code
      
    
    </summary>
    
    
      <category term="redis key清理" scheme="https://garywu520.github.io/blog/tags/redis-key%E6%B8%85%E7%90%86/"/>
    
      <category term="key" scheme="https://garywu520.github.io/blog/tags/key/"/>
    
      <category term="清理" scheme="https://garywu520.github.io/blog/tags/%E6%B8%85%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>zabbix server监控zabbix agent存活</title>
    <link href="https://garywu520.github.io/blog/2019/10/29/zabbix-server%E7%9B%91%E6%8E%A7zabbix-agent%E5%AD%98%E6%B4%BB/"/>
    <id>https://garywu520.github.io/blog/2019/10/29/zabbix-server监控zabbix-agent存活/</id>
    <published>2019-10-29T07:34:00.000Z</published>
    <updated>2019-10-29T08:01:12.270Z</updated>
    
    <content type="html"><![CDATA[<p>正常逻辑</p><p>如果按照正常部署方式，一般是创建zabbix-agent模板，通过net.tcp.listen[port] 或 自定义key，触发器≠1就告警，最后将模板应用到所有agent主机。</p><a id="more"></a><p>实际情况</p><p>如果你细心点就会发现，当某台机器的zabbix-agent 服务stop后，监控数据就取不到了，紧接着就是zabbix断图，此时，触发器≠1由于没有获取到任何值而不会触发告警，所以也就监控不到某个机器的zabbix agent服务何时异常退出或机器宕机，这看起来是很严重的问题。</p><p>解决思路</p><p>在zabbix server端的模板中，通过配置 net.tcp.listen[ip,port]  简单检查，来获取不同agent的运行状态。</p><p>缺点：由于每台机器的IP地址都不相同，故每台机器都需要添加一个监控项+触发器，对于上百台机器来说，这是很繁琐的工作。至于用什么方法简化自己繁琐的工作，这是一个脑力活儿</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;正常逻辑&lt;/p&gt;
&lt;p&gt;如果按照正常部署方式，一般是创建zabbix-agent模板，通过net.tcp.listen[port] 或 自定义key，触发器≠1就告警，最后将模板应用到所有agent主机。&lt;/p&gt;
    
    </summary>
    
    
      <category term="监控" scheme="https://garywu520.github.io/blog/tags/%E7%9B%91%E6%8E%A7/"/>
    
      <category term="zabbix server" scheme="https://garywu520.github.io/blog/tags/zabbix-server/"/>
    
      <category term="zabbix agent" scheme="https://garywu520.github.io/blog/tags/zabbix-agent/"/>
    
  </entry>
  
  <entry>
    <title>MySQL缓存参数优化</title>
    <link href="https://garywu520.github.io/blog/2019/10/24/MySQL%E4%B8%A4%E4%B8%AA%E6%A0%B8%E5%BF%83%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/"/>
    <id>https://garywu520.github.io/blog/2019/10/24/MySQL两个核心参数优化/</id>
    <published>2019-10-24T09:38:36.000Z</published>
    <updated>2019-10-24T09:41:56.056Z</updated>
    
    <content type="html"><![CDATA[<p>表缓存与查询缓存</p><h5 id="1-表缓存"><a href="#1-表缓存" class="headerlink" title="1. 表缓存"></a>1. 表缓存</h5><p>MySQL table_open_cache优化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; set global table_open_cache = 3072; </span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show global variables like &apos;table_open_cache&apos;;</span><br><span class="line">+------------------+-------+</span><br><span class="line">| Variable_name    | Value |</span><br><span class="line">+------------------+-------+</span><br><span class="line">| table_open_cache | 3072  |</span><br><span class="line">+------------------+-------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show global status like &apos;open%tables%&apos;;</span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| Open_tables   | 132   |</span><br><span class="line">| Opened_tables | 139   |</span><br><span class="line">+---------------+-------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>配置文件修改【永久生效】</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">table_open_cache = 3072</span><br></pre></td></tr></table></figure><p>Open_tables会根据table_open_cache的限制进行表缓存，当open_tables等于table_open_cache的时候，open_tables会清理较早时间的表缓存来为新缓存腾出空间，一直反复，在此过程中，mysql的这个操作会消耗一定的系统内存和cpu资源。所以有必要对table_open_cache进行适当优化。</p><p>注：table_open_cache务必要小于open_file_limit的值，否则可能出现客户端由于文件描述符不足而连接失败，对应unix系统的ulimit值。</p><hr><h5 id="2-查询缓存"><a href="#2-查询缓存" class="headerlink" title="2. 查询缓存"></a>2. 查询缓存</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &apos;%query_cache%&apos;;</span><br><span class="line">+------------------------------+---------+</span><br><span class="line">| Variable_name                | Value   |</span><br><span class="line">+------------------------------+---------+</span><br><span class="line">| have_query_cache             | YES     |</span><br><span class="line">| query_cache_limit            | 1048576 |</span><br><span class="line">| query_cache_min_res_unit     | 4096    |</span><br><span class="line">| query_cache_size             | 1048576 |</span><br><span class="line">| query_cache_type             | OFF     |</span><br><span class="line">| query_cache_wlock_invalidate | ON      |</span><br><span class="line">+------------------------------+---------+</span><br><span class="line"></span><br><span class="line">mysql&gt; set global query_cache_type = 1;</span><br><span class="line">ERROR 1651 (HY000): Query cache is disabled; restart the server with query_cache_type=1 to enable it</span><br></pre></td></tr></table></figure><p>参数释义：</p><p>have_query_cache YES 表示数据库支持查询缓存功能[不代表已开启查询缓存]</p><p>query_cache_type: ON 表示启用查询缓存</p><p>query_cache_limit表示单条查询缓存的最大值，默认1M</p><p> query_cache_min_res_unit 表示缓存内存的最小单元，默认4k</p><p>query_cache_wlock_invalidate: 表示查询语句所查询的表如果被写锁锁定，是否仍然使用缓存返回结果。OFF表示使用缓存返回结果，ON表示关闭此功能。我们来描述一个场景：因为写锁是独占的，排他的，所以当写锁施加在对应表上的时候，如果对当前表发起查询请求，那么查询操作则需要等到写锁释放后才能进行。可是如果对于的查询语句正好命中了这张表的缓存，查询请求是否就不用继续等待写锁释放而直接从缓存中获取结果？默认值是OFF，也就是说当值为OFF时，即使表被施加了写锁，查询语句如果命中了对于的缓存，则会直接从缓存获取结果。换句话说，如果此值设置为ON，如果表被施加了写锁，那么当写锁释放时，数据可能发生了改变，所以在表被施加写锁期间，即使有查询命中了查询缓存，也不能从缓存获取结果。那么我们可以得出结论：当值设置为ON时，更加安全，保证了数据的一致性。</p><p>查询缓存：<a href="https://www.zsythink.net/archives/1111" target="_blank" rel="noopener">参考: 朱双印博客</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;表缓存与查询缓存&lt;/p&gt;
&lt;h5 id=&quot;1-表缓存&quot;&gt;&lt;a href=&quot;#1-表缓存&quot; class=&quot;headerlink&quot; title=&quot;1. 表缓存&quot;&gt;&lt;/a&gt;1. 表缓存&lt;/h5&gt;&lt;p&gt;MySQL table_open_cache优化&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; set global table_open_cache = 3072; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 0 rows affected (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; show global variables like &amp;apos;table_open_cache&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------------------+-------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Variable_name    | Value |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------------------+-------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| table_open_cache | 3072  |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------------------+-------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 row in set (0.01 sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="https://garywu520.github.io/blog/tags/MySQL/"/>
    
      <category term="表缓存" scheme="https://garywu520.github.io/blog/tags/%E8%A1%A8%E7%BC%93%E5%AD%98/"/>
    
      <category term="查询缓存" scheme="https://garywu520.github.io/blog/tags/%E6%9F%A5%E8%AF%A2%E7%BC%93%E5%AD%98/"/>
    
      <category term="table_open_cache" scheme="https://garywu520.github.io/blog/tags/table-open-cache/"/>
    
      <category term="query_cache" scheme="https://garywu520.github.io/blog/tags/query-cache/"/>
    
  </entry>
  
  <entry>
    <title>免费SSL证书-申请更新脚本</title>
    <link href="https://garywu520.github.io/blog/2019/10/16/%E5%85%8D%E8%B4%B9SSL%E8%AF%81%E4%B9%A6-%E7%94%B3%E8%AF%B7%E6%9B%B4%E6%96%B0%E8%84%9A%E6%9C%AC/"/>
    <id>https://garywu520.github.io/blog/2019/10/16/免费SSL证书-申请更新脚本/</id>
    <published>2019-10-16T03:18:55.000Z</published>
    <updated>2019-11-14T05:42:59.819Z</updated>
    
    <content type="html"><![CDATA[<p> <strong>acme.sh</strong> 实现了 <code>acme</code> 协议, 可以从 letsencrypt 生成免费的证书</p><p>环境：Nginx</p><h5 id="一、安装acme-sh"><a href="#一、安装acme-sh" class="headerlink" title="一、安装acme.sh"></a>一、安装acme.sh</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">curl  https://get.acme.sh | sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">把 acme.sh 安装到root目录下</span></span><br><span class="line">~/.acme.sh/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">并创建 一个 bash 的 <span class="built_in">alias</span>, 方便你的使用</span></span><br><span class="line">alias acme.sh=~/.acme.sh/acme.sh</span><br></pre></td></tr></table></figure><p> 安装过程不会污染已有的系统任何功能和文件, 所有的修改都限制在安装目录中: <code>~/.acme.sh/</code> </p><a id="more"></a><h5 id="二、SSL证书自动更新脚本"><a href="#二、SSL证书自动更新脚本" class="headerlink" title="二、SSL证书自动更新脚本"></a>二、SSL证书自动更新脚本</h5><p>注：此脚本与2019/11/15更新，生成ECC 384bit公钥，公钥参数：ECDSA_P384</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">自动更新SSL证书,crontab每30天强制更新一次</span></span><br><span class="line"></span><br><span class="line">DIR=/root/.acme.sh</span><br><span class="line">SSLDIR=/etc/nginx/ssl</span><br><span class="line">DOMAIN=xx.xx.net</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">强制更新证书</span></span><br><span class="line">cd $DIR </span><br><span class="line">if [ -f dhparam.pem ];then</span><br><span class="line">   rm -f ./dhparam.pem</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">更新acme.sh到最新版</span></span><br><span class="line">./acme.sh --upgrade</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">生成ECDSA V3版的新key和cer</span></span><br><span class="line"><span class="meta">#</span><span class="bash">强制更新证书并指定nginx Root根目录[自动添加验证文件]</span></span><br><span class="line">./acme.sh --keylength ec-384 --issue --force  -d $DOMAIN --webroot /usr/share/nginx</span><br><span class="line">sleep 2</span><br><span class="line">openssl dhparam -dsaparam -out dhparam.pem 4096</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">拷贝新证书覆盖ssl目录</span></span><br><span class="line">\cp $DIR/$DOMAIN_ecc/$DOMAIN.cer $SSLDIR/</span><br><span class="line">\cp $DIR/$DOMAIN_ecc/$DOMAIN.key $SSLDIR/</span><br><span class="line">\cp $DIR/$DOMAIN_ecc/fullchain.cer $SSLDIR/</span><br><span class="line">\cp $DIR/dhparam.pem $SSLDIR/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">重启nginx服务</span></span><br><span class="line">/bin/systemctl restart nginx</span><br></pre></td></tr></table></figure><p>nginx.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">由于证书是ECC 384bit，故需要更新ssl_ciphers参数</span></span><br><span class="line"><span class="meta">#</span><span class="bash">HTTP2特性已启用，启用方法google</span></span><br><span class="line">server &#123;</span><br><span class="line">      listen              443 ssl http2;</span><br><span class="line">      server_name         xx.xx.com;</span><br><span class="line">      keepalive_timeout   70;</span><br><span class="line">      charset ISO-88509-1;</span><br><span class="line"></span><br><span class="line">      ssl_stapling on;</span><br><span class="line">      ssl_stapling_verify on;</span><br><span class="line">      ssl_session_cache shared:SSL:10m;</span><br><span class="line">      ssl_session_timeout 10m;</span><br><span class="line">      ssl_protocols  TLSv1.2;</span><br><span class="line">      ssl_prefer_server_ciphers on;</span><br><span class="line">      ssl_certificate     /etc/nginx/ssl/xx.xx.com.cer;</span><br><span class="line">      ssl_certificate_key /etc/nginx/ssl/xx.xx.com.key;</span><br><span class="line">      ssl_trusted_certificate /etc/nginx/ssl/fullchain.cer;</span><br><span class="line">      ssl_dhparam /etc/nginx/ssl/dhparam.pem;</span><br><span class="line">      ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384";</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GitHub: <a href="[https://github.com/Neilpang/acme.sh/wiki/%E8%AF%B4%E6%98%8E](https://github.com/Neilpang/acme.sh/wiki/说明)">项目地址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; &lt;strong&gt;acme.sh&lt;/strong&gt; 实现了 &lt;code&gt;acme&lt;/code&gt; 协议, 可以从 letsencrypt 生成免费的证书&lt;/p&gt;
&lt;p&gt;环境：Nginx&lt;/p&gt;
&lt;h5 id=&quot;一、安装acme-sh&quot;&gt;&lt;a href=&quot;#一、安装acme-sh&quot; class=&quot;headerlink&quot; title=&quot;一、安装acme.sh&quot;&gt;&lt;/a&gt;一、安装acme.sh&lt;/h5&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl  https://get.acme.sh | sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;把 acme.sh 安装到root目录下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~/.acme.sh/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;并创建 一个 bash 的 &lt;span class=&quot;built_in&quot;&gt;alias&lt;/span&gt;, 方便你的使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alias acme.sh=~/.acme.sh/acme.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt; 安装过程不会污染已有的系统任何功能和文件, 所有的修改都限制在安装目录中: &lt;code&gt;~/.acme.sh/&lt;/code&gt; &lt;/p&gt;
    
    </summary>
    
    
      <category term="Nginx" scheme="https://garywu520.github.io/blog/tags/Nginx/"/>
    
      <category term="crt" scheme="https://garywu520.github.io/blog/tags/crt/"/>
    
      <category term="SSL" scheme="https://garywu520.github.io/blog/tags/SSL/"/>
    
      <category term="pem" scheme="https://garywu520.github.io/blog/tags/pem/"/>
    
      <category term="key" scheme="https://garywu520.github.io/blog/tags/key/"/>
    
      <category term="证书" scheme="https://garywu520.github.io/blog/tags/%E8%AF%81%E4%B9%A6/"/>
    
      <category term="acme.sh" scheme="https://garywu520.github.io/blog/tags/acme-sh/"/>
    
      <category term="dhparam.pem" scheme="https://garywu520.github.io/blog/tags/dhparam-pem/"/>
    
      <category term="letsencrypt" scheme="https://garywu520.github.io/blog/tags/letsencrypt/"/>
    
  </entry>
  
  <entry>
    <title>SSH保持长连接</title>
    <link href="https://garywu520.github.io/blog/2019/10/15/SSH%E4%BF%9D%E6%8C%81%E9%95%BF%E8%BF%9E%E6%8E%A5/"/>
    <id>https://garywu520.github.io/blog/2019/10/15/SSH保持长连接/</id>
    <published>2019-10-15T03:18:18.000Z</published>
    <updated>2019-10-15T03:30:26.257Z</updated>
    
    <content type="html"><![CDATA[<h5 id="场景："><a href="#场景：" class="headerlink" title="场景："></a>场景：</h5><p>跳板机从阿里云北京到阿里云其他地方，过一会儿总出现无响应的问题。</p><h5 id="方案一：服务端配置"><a href="#方案一：服务端配置" class="headerlink" title="方案一：服务端配置"></a>方案一：服务端配置</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config  #添加如下两行</span><br><span class="line"></span><br><span class="line">ClientAliveInterval 60</span><br><span class="line">ClientAliveCountMax 1</span><br></pre></td></tr></table></figure><p> SSH Server 每 60 秒就会自动发送一个信号给 Client，而等待 Client 回应， 如果客户端没有回应，会记录下来直到记录数超过 ClientAliveCountMax 的值时，才会断开连接。 </p><a id="more"></a><h5 id="方案二：客户端配置"><a href="#方案二：客户端配置" class="headerlink" title="方案二：客户端配置"></a>方案二：客户端配置</h5><p>如果由于某些原因，不能控制服务器，也可以在客户端实现</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/ssh_config      #注意：这里的文件是ssh_config</span><br><span class="line"></span><br><span class="line">TCPKeepAlive yes</span><br><span class="line">ServerAliveInterval 30</span><br></pre></td></tr></table></figure><p>参数：</p><ul><li>TCPKeepAlive yes    开启TCP保持连接 </li><li>ServerAliveInterval 30   每过30秒发一个数据包到服务器证明“我还活着” </li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;场景：&quot;&gt;&lt;a href=&quot;#场景：&quot; class=&quot;headerlink&quot; title=&quot;场景：&quot;&gt;&lt;/a&gt;场景：&lt;/h5&gt;&lt;p&gt;跳板机从阿里云北京到阿里云其他地方，过一会儿总出现无响应的问题。&lt;/p&gt;
&lt;h5 id=&quot;方案一：服务端配置&quot;&gt;&lt;a href=&quot;#方案一：服务端配置&quot; class=&quot;headerlink&quot; title=&quot;方案一：服务端配置&quot;&gt;&lt;/a&gt;方案一：服务端配置&lt;/h5&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim /etc/ssh/sshd_config  #添加如下两行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ClientAliveInterval 60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ClientAliveCountMax 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt; SSH Server 每 60 秒就会自动发送一个信号给 Client，而等待 Client 回应， 如果客户端没有回应，会记录下来直到记录数超过 ClientAliveCountMax 的值时，才会断开连接。 &lt;/p&gt;
    
    </summary>
    
    
      <category term="SSH" scheme="https://garywu520.github.io/blog/tags/SSH/"/>
    
      <category term="Keepalive" scheme="https://garywu520.github.io/blog/tags/Keepalive/"/>
    
      <category term="sshd" scheme="https://garywu520.github.io/blog/tags/sshd/"/>
    
  </entry>
  
  <entry>
    <title>Bash 5.0编译</title>
    <link href="https://garywu520.github.io/blog/2019/10/14/Bash-5-0%E7%BC%96%E8%AF%91/"/>
    <id>https://garywu520.github.io/blog/2019/10/14/Bash-5-0编译/</id>
    <published>2019-10-14T07:34:29.000Z</published>
    <updated>2019-10-14T09:49:28.879Z</updated>
    
    <content type="html"><![CDATA[<p>CentOS7安装的Bash版本是 V4.2.46，而Bash目前已经发不了5.0 Beta，编译玩玩</p><p>Bash: <a href="https://www.gnu.org/software/bash/" target="_blank" rel="noopener">Download</a></p><h5 id="一、编译安装Bash-5-0"><a href="#一、编译安装Bash-5-0" class="headerlink" title="一、编译安装Bash 5.0"></a>一、编译安装Bash 5.0</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">安装C编译器,make程序,内核头文件</span></span><br><span class="line">yum install -y gcc make kernel-headers</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://ftp.gnu.org/gnu/bash/bash-5.0-beta2.tar.gz</span><br><span class="line">tar -zxf bash-5.0-beta2.tar.gz</span><br><span class="line">cd bash-5.0-beta2</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/bash5.0</span><br><span class="line">make</span><br><span class="line">make test</span><br><span class="line">make install</span><br><span class="line">/usr/local/bash5.0/bin/bash --version</span><br></pre></td></tr></table></figure><h5 id="二、使用新版本的Bash-Shell"><a href="#二、使用新版本的Bash-Shell" class="headerlink" title="二、使用新版本的Bash Shell"></a>二、使用新版本的Bash Shell</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv /bin/bashbug /bin/bashbug.bak &amp;&amp; ln -sv /usr/local/bash5.0/bin/bashbug /usr/bashbug</span><br><span class="line">mv /bin/bash /bin/bash.bak &amp;&amp; ln -sv /usr/local/bash5.0/bin/bash /bin/bash</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# bash --version</span><br><span class="line">GNU bash, version 5.0.0(1)-beta2 (x86_64-pc-linux-gnu)</span><br><span class="line">Copyright (C) 2018 Free Software Foundation, Inc.</span><br><span class="line">License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class="line"></span><br><span class="line">This is free software; you are free to change and redistribute it.</span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CentOS7安装的Bash版本是 V4.2.46，而Bash目前已经发不了5.0 Beta，编译玩玩&lt;/p&gt;
&lt;p&gt;Bash: &lt;a href=&quot;https://www.gnu.org/software/bash/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Download&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;一、编译安装Bash-5-0&quot;&gt;&lt;a href=&quot;#一、编译安装Bash-5-0&quot; class=&quot;headerlink&quot; title=&quot;一、编译安装Bash 5.0&quot;&gt;&lt;/a&gt;一、编译安装Bash 5.0&lt;/h5&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;安装C编译器,make程序,内核头文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install -y gcc make kernel-headers&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="bash" scheme="https://garywu520.github.io/blog/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>OpenResty+Lua实现WAF应用防火墙</title>
    <link href="https://garywu520.github.io/blog/2019/10/12/OpenResty-Lua%E5%AE%9E%E7%8E%B0WAF%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    <id>https://garywu520.github.io/blog/2019/10/12/OpenResty-Lua实现WAF应用防火墙/</id>
    <published>2019-10-12T09:24:57.000Z</published>
    <updated>2019-10-12T09:30:23.633Z</updated>
    
    <content type="html"><![CDATA[<h5 id="一、OpenResty概览"><a href="#一、OpenResty概览" class="headerlink" title="一、OpenResty概览"></a>一、OpenResty概览</h5><p>OpenResty是一个基于Lua扩展Nginx实现的可伸缩Web平台，其内部集成了大量精良的Lua库、第三方模块以及大多数依赖项。用于方便的部署能够处理超高并发、扩展性极高的动态Web应用。</p><p>OpenResty的目标是让你的Web服务直接跑在Nginx服务内部，充分利用Nginx的非阻塞I/O模型，不仅仅对HTTP客户端请求，甚至于对后端诸如MySQL、PostgreSQL、Memcache以及Redis等都进行一致的高性能响应。</p><h5 id="二、安装依赖库"><a href="#二、安装依赖库" class="headerlink" title="二、安装依赖库"></a>二、安装依赖库</h5><ul><li><p>安装pcre依赖库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://ftp.pcre.org/pub/pcre/pcre-8.43.tar.gz</span><br><span class="line">tar -zxf pcre-8.43.tar.gz</span><br><span class="line">cd pcre-8.43</span><br><span class="line">./configure &amp;&amp; make &amp;&amp; make install</span><br></pre></td></tr></table></figure></li><li><p>安装zlib依赖库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y zlib zlib-devel</span><br></pre></td></tr></table></figure></li><li><p>安装ssl依赖库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure><a id="more"></a></li><li><p>安装Lua组件 [ 想使用Lua实现WAF功能 ]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">下载最新LuaJIT</span></span><br><span class="line">wget http://luajit.org/download/LuaJIT-2.0.5.tar.gz</span><br><span class="line">tar -zxf LuaJIT-2.0.5.tar.gz</span><br><span class="line">cd LuaJIT-2.0.5</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">export LUAJIT_LIB=/usr/local/lib</span><br><span class="line">export LUAJIT_INC=/usr/local/include/luajit-2.0</span><br><span class="line">ln -s /usr/local/lib/libluajit-5.1.so.2 /lib64/libluajit-5.1.so.2</span><br><span class="line">ldconfig</span><br></pre></td></tr></table></figure></li></ul><h5 id="三、编译安装OpenResty"><a href="#三、编译安装OpenResty" class="headerlink" title="三、编译安装OpenResty"></a>三、编译安装OpenResty</h5><p>官方各版本：<a href="https://openresty.org/cn/download.html" target="_blank" rel="noopener">下载地址</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">wget https://openresty.org/download/openresty-1.11.2.5.tar.gz</span><br><span class="line">tar -zxf openresty-1.11.2.5.tar.gz</span><br><span class="line">cd openresty-1.11.2.5</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">创建www用户</span></span><br><span class="line">useradd -s /sbin/nologin -M www</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">编译openresty</span></span><br><span class="line">./configure --prefix=/usr/local/openresty \</span><br><span class="line">--user=www \</span><br><span class="line">--group=www \</span><br><span class="line">--with-luajit \</span><br><span class="line">--with-http_v2_module \</span><br><span class="line">--with-http_stub_status_module \</span><br><span class="line">--with-http_ssl_module \</span><br><span class="line">--with-http_gzip_static_module \</span><br><span class="line">--with-ipv6 --with-http_sub_module \</span><br><span class="line">--with-pcre \</span><br><span class="line">--with-pcre-jit \</span><br><span class="line">--with-file-aio \</span><br><span class="line">--with-http_dav_module</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">安装</span></span><br><span class="line">gmake  &amp;&amp; gmake install</span><br></pre></td></tr></table></figure><p>测试openresty</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">创建nginx配置文件存放目录</span></span><br><span class="line">mkdir -p /usr/local/openresty/nginx/conf/conf.d</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> vim /usr/<span class="built_in">local</span>/openresty/nginx/conf/nginx.conf</span></span><br><span class="line">http &#123;</span><br><span class="line">    ......</span><br><span class="line">    include /usr/local/openresty/nginx/conf/conf.d/*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>vim /usr/local/openresty/nginx/conf/conf.d/hello.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    location /hello &#123;</span><br><span class="line">            default_type text/html;</span><br><span class="line">            content_by_lua_block &#123;</span><br><span class="line">                ngx.say("HelloWorld")</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动Nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/openresty/nginx/sbin/nginx -t</span><br><span class="line">/usr/local/openresty/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><p>web访问测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET http://192.168.1.186/hello</span><br><span class="line">HelloWorld</span><br></pre></td></tr></table></figure><p>Systemd管理Nginx启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -sv /usr/local/openresty/nginx/sbin/nginx /usr/sbin/</span><br></pre></td></tr></table></figure><p>vim  /etc/systemd/system/nginx.service</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=The NGINX HTTP and reverse proxy server</span><br><span class="line">After=syslog.target network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/usr/local/openresty/nginx/logs/nginx.pid</span><br><span class="line">ExecStartPre=/usr/sbin/nginx -t</span><br><span class="line">ExecStart=/usr/sbin/nginx</span><br><span class="line">ExecReload=/usr/sbin/nginx -s reload</span><br><span class="line">ExecStop=/bin/kill -s QUIT $MAINPID</span><br><span class="line">PrivateTmp=true</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable nginx</span><br><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure><h5 id="四、部署WAF"><a href="#四、部署WAF" class="headerlink" title="四、部署WAF"></a>四、部署WAF</h5><p>功能参考：赵班长的 <a href="https://github.com/unixhot/waf" target="_blank" rel="noopener">https://github.com/unixhot/waf</a> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/unixhot/waf.git</span><br><span class="line">cp -a ./waf/waf /usr/local/openresty/nginx/conf/</span><br><span class="line"></span><br><span class="line">[root@local waf]# ls -lh /usr/local/openresty/nginx/conf/waf/</span><br><span class="line">total 20K</span><br><span class="line">-rw-r--r--. 1 root root  408 Sep 24 23:17 access.lua</span><br><span class="line">-rw-r--r--. 1 root root 1.3K Sep 24 23:17 config.lua</span><br><span class="line">-rw-r--r--. 1 root root 5.4K Sep 24 23:17 init.lua</span><br><span class="line">-rw-r--r--. 1 root root 2.3K Sep 24 23:17 lib.lua</span><br><span class="line">drwxr-xr-x. 2 root root  158 Sep 24 23:17 rule-config</span><br></pre></td></tr></table></figure><p>把WAF整合到Nginx中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat  /usr/local/openresty/nginx/conf/nginx.conf   </span><br><span class="line"><span class="meta">#</span><span class="bash">放到http区段，注意路径</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    ......</span><br><span class="line">    #WAF</span><br><span class="line">    lua_shared_dict limit 50m;</span><br><span class="line">    lua_package_path "/usr/local/openresty/nginx/conf/waf/?.lua";</span><br><span class="line">    init_by_lua_file "/usr/local/openresty/nginx/conf/waf/init.lua";</span><br><span class="line">    access_by_lua_file "/usr/local/openresty/nginx/conf/waf/access.lua";</span><br><span class="line">    ......</span><br><span class="line">    include /usr/local/openresty/nginx/conf/conf.d/*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><h5 id="五、WAF模块"><a href="#五、WAF模块" class="headerlink" title="五、WAF模块"></a>五、WAF模块</h5><p>waf安装好以后，不要直接上生产，而是先记录日志，不做任何动作。确定WAF不产生误杀。</p><ul><li><p>config.lua配置模块 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">pwd</span></span></span><br><span class="line">/usr/local/openresty/nginx/conf/waf</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">创建waf日志目录</span></span><br><span class="line">mkdir /tmp/waf_logs</span><br><span class="line">chown -R www:www /tmp/waf_logs</span><br></pre></td></tr></table></figure><p>config.lua 配置文件说明</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--WAF config file,enable = "on",disable = "off"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--是否开启配置WAF</span></span><br><span class="line">config_waf_enable = <span class="string">"on"</span>     </span><br><span class="line"></span><br><span class="line"><span class="comment">--waf log dir</span></span><br><span class="line">config_log_dir = <span class="string">"/tmp/waf_logs"</span>   </span><br><span class="line"></span><br><span class="line"><span class="comment">--rule setting</span></span><br><span class="line">config_rule_dir = <span class="string">"/usr/local/openresty/nginx/conf/waf/rule-config"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--enable/disable white url 是否开启URL检测</span></span><br><span class="line">config_white_url_check = <span class="string">"on"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--enable/disable white ip  是否开启IP白名单检测</span></span><br><span class="line">config_white_ip_check = <span class="string">"on"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--enable/disable block ip  是否开启IP黑名单检测</span></span><br><span class="line">config_black_ip_check = <span class="string">"on"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--enable/disable url filtering 是否开启URL过滤</span></span><br><span class="line">config_url_check = <span class="string">"on"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--enalbe/disable url args filtering 是否开启参数检测</span></span><br><span class="line">config_url_args_check = <span class="string">"on"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--enable/disable user agent filtering 是否开启UA检测</span></span><br><span class="line">config_user_agent_check = <span class="string">"on"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--enable/disable cookie deny filtering 是否开启cookie检测</span></span><br><span class="line">config_cookie_check = <span class="string">"on"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--enable/disable cc filtering 是否开启防cc攻击</span></span><br><span class="line">config_cc_check = <span class="string">"on"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--cc rate the xxx of xxx seconds 允许一个IP 60秒内只能访问10次</span></span><br><span class="line">config_cc_rate = <span class="string">"10/60"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--enable/disable post filtering 是否开启post检测</span></span><br><span class="line">config_post_check = <span class="string">"on"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--config waf output redirect/html action一个html页面，也可以选择跳转</span></span><br><span class="line">config_waf_output = <span class="string">"html"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--if config_waf_output ,setting url</span></span><br><span class="line">config_waf_redirect_url = <span class="string">"https://globtc.io"</span></span><br><span class="line">config_output_html=<span class="string">[[</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;</span></span><br><span class="line"><span class="string">&lt;meta http-equiv="Content-Language" content="zh-cn" /&gt;</span></span><br><span class="line"><span class="string">&lt;title&gt;FBI&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;h1 align="center"&gt;异常操作已被捕捉，请规范上网行为</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">]]</span></span><br></pre></td></tr></table></figure></li><li><p>access.lua 规则模块 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@local waf]# pwd</span><br><span class="line">/usr/local/openresty/nginx/conf/waf</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@local waf]# cat access.lua </span><br><span class="line">require 'init'</span><br><span class="line"></span><br><span class="line">function waf_main()</span><br><span class="line">    if white_ip_check() then</span><br><span class="line">    elseif black_ip_check() then</span><br><span class="line">    elseif user_agent_attack_check() then</span><br><span class="line">    elseif cc_attack_check() then</span><br><span class="line">    elseif cookie_attack_check() then</span><br><span class="line">    elseif white_url_check() then</span><br><span class="line">    elseif url_attack_check() then</span><br><span class="line">    elseif url_args_attack_check() then</span><br><span class="line">    --elseif post_attack_check() then</span><br><span class="line">    else</span><br><span class="line">        return</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">waf_main()</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">检测顺序：</span><br><span class="line">-- 先检查白名单，通过即不检测；再检查黑名单，不通过即拒绝;</span><br><span class="line">-- 检查UA，UA不通过即拒绝；</span><br><span class="line">-- 检查cookie；</span><br><span class="line">-- URL检查;</span><br><span class="line">-- URL参数检查;</span><br><span class="line">-- post检查；</span><br></pre></td></tr></table></figure></li></ul><h5 id="六、WAF功能验证"><a href="#六、WAF功能验证" class="headerlink" title="六、WAF功能验证"></a>六、WAF功能验证</h5><h6 id="①-模拟SQL注入"><a href="#①-模拟SQL注入" class="headerlink" title="① 模拟SQL注入"></a>① 模拟SQL注入</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost conf]# curl http://192.168.1.186/a.sql</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;</span><br><span class="line">&lt;meta http-equiv="Content-Language" content="zh-cn" /&gt;</span><br><span class="line">&lt;title&gt;FBI&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align="center"&gt;异常操作已被捕捉，请规范上网行为</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h6 id="②使用ab压测工具模拟防cc攻击-未测试"><a href="#②使用ab压测工具模拟防cc攻击-未测试" class="headerlink" title="②使用ab压测工具模拟防cc攻击[未测试]"></a>②使用ab压测工具模拟防cc攻击[未测试]</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y httpd-tools</span><br><span class="line">ab -c 500 -n 10000 http://192.168.1.186/index.php</span><br></pre></td></tr></table></figure><h6 id="③模拟IP黑名单"><a href="#③模拟IP黑名单" class="headerlink" title="③模拟IP黑名单"></a>③模拟IP黑名单</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo "192.168.1.8" &gt;&gt;/usr/local/openresty/nginx/conf/waf/rule-config/blackip.rule</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# curl http://192.168.1.186/a.sql</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;403 Forbidden&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body bgcolor="white"&gt;</span><br><span class="line">&lt;center&gt;&lt;h1&gt;403 Forbidden&lt;/h1&gt;&lt;/center&gt;</span><br><span class="line">&lt;hr&gt;&lt;center&gt;openresty/1.11.2.5&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h6 id="④模拟IP白名单"><a href="#④模拟IP白名单" class="headerlink" title="④模拟IP白名单"></a>④模拟IP白名单</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">白名单即允许某个IP无限制访问，由于a.sql本身不存在，故访问时正常情况下返回404</span></span><br><span class="line">echo "192.168.1.8" &gt;&gt;/usr/local/openresty/nginx/conf/waf/rule-config/whiteip.rule</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# curl http://192.168.1.186/a.sql</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body bgcolor="white"&gt;</span><br><span class="line">&lt;center&gt;&lt;h1&gt;404 Not Found&lt;/h1&gt;&lt;/center&gt;</span><br><span class="line">&lt;hr&gt;&lt;center&gt;openresty/1.11.2.5&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h6 id="⑤模拟URL参数检测"><a href="#⑤模拟URL参数检测" class="headerlink" title="⑤模拟URL参数检测"></a>⑤模拟URL参数检测</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl http://192.168.1.186/?a=select * from table</span><br><span class="line">或</span><br><span class="line">curl http://192.168.1.186/?a=select%20*%20from%20table</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;</span><br><span class="line">&lt;meta http-equiv="Content-Language" content="zh-cn" /&gt;</span><br><span class="line">&lt;title&gt;FBI&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align="center"&gt;异常操作已被捕捉，请规范上网行为</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>注：URL请求规范 args.rule已有规范</p><p>cat /usr/local/openresty/nginx/conf/waf/rule-config/args.rule </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">\.\./</span><br><span class="line">\:\$</span><br><span class="line">\$\&#123;</span><br><span class="line">select.+(from|limit)</span><br><span class="line">(?:(union(.*?)select))</span><br><span class="line">having|rongjitest</span><br><span class="line">sleep\((\s*)(\d*)(\s*)\)</span><br><span class="line">benchmark\((.*)\,(.*)\)</span><br><span class="line">base64_decode\(</span><br><span class="line">(?:from\W+information_schema\W)</span><br><span class="line">(?:(?:current_)user|database|schema|connection_id)\s*\(</span><br><span class="line">(?:etc\/\W*passwd)</span><br><span class="line">into(\s+)+(?:dump|out)file\s*</span><br><span class="line">group\s+by.+\(</span><br><span class="line">xwork.MethodAccessor</span><br><span class="line">(?:define|eval|file_get_contents|include|require|require_once|shell_exec|phpinfo|system|passthru|preg_\w+|execute|echo|print|print_r|var_dump|(fp)open|alert|showmodaldialog)\(</span><br><span class="line">xwork\.MethodAccessor</span><br><span class="line">(gopher|doc|php|glob|file|phar|zlib|ftp|ldap|dict|ogg|data)\:\/</span><br><span class="line">java\.lang</span><br><span class="line">\$_(GET|post|cookie|files|session|env|phplib|GLOBALS|SERVER)\[</span><br><span class="line">\&lt;(iframe|script|body|img|layer|div|meta|style|base|object|input)</span><br><span class="line">(onmouseover|onerror|onload)\=</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;一、OpenResty概览&quot;&gt;&lt;a href=&quot;#一、OpenResty概览&quot; class=&quot;headerlink&quot; title=&quot;一、OpenResty概览&quot;&gt;&lt;/a&gt;一、OpenResty概览&lt;/h5&gt;&lt;p&gt;OpenResty是一个基于Lua扩展Nginx实现的可伸缩Web平台，其内部集成了大量精良的Lua库、第三方模块以及大多数依赖项。用于方便的部署能够处理超高并发、扩展性极高的动态Web应用。&lt;/p&gt;
&lt;p&gt;OpenResty的目标是让你的Web服务直接跑在Nginx服务内部，充分利用Nginx的非阻塞I/O模型，不仅仅对HTTP客户端请求，甚至于对后端诸如MySQL、PostgreSQL、Memcache以及Redis等都进行一致的高性能响应。&lt;/p&gt;
&lt;h5 id=&quot;二、安装依赖库&quot;&gt;&lt;a href=&quot;#二、安装依赖库&quot; class=&quot;headerlink&quot; title=&quot;二、安装依赖库&quot;&gt;&lt;/a&gt;二、安装依赖库&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装pcre依赖库&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https://ftp.pcre.org/pub/pcre/pcre-8.43.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -zxf pcre-8.43.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd pcre-8.43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装zlib依赖库&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install -y zlib zlib-devel&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装ssl依赖库&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install -y openssl openssl-devel&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Nginx" scheme="https://garywu520.github.io/blog/tags/Nginx/"/>
    
      <category term="防火墙" scheme="https://garywu520.github.io/blog/tags/%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
      <category term="OpenResty" scheme="https://garywu520.github.io/blog/tags/OpenResty/"/>
    
      <category term="Lua" scheme="https://garywu520.github.io/blog/tags/Lua/"/>
    
      <category term="WAF" scheme="https://garywu520.github.io/blog/tags/WAF/"/>
    
      <category term="应用防火墙" scheme="https://garywu520.github.io/blog/tags/%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
      <category term="Iptables" scheme="https://garywu520.github.io/blog/tags/Iptables/"/>
    
  </entry>
  
  <entry>
    <title>清理linux系统过多innode</title>
    <link href="https://garywu520.github.io/blog/2019/10/12/%E6%B8%85%E7%90%86linux%E7%B3%BB%E7%BB%9F%E8%BF%87%E5%A4%9Ainnode/"/>
    <id>https://garywu520.github.io/blog/2019/10/12/清理linux系统过多innode/</id>
    <published>2019-10-12T02:41:32.000Z</published>
    <updated>2019-10-12T02:53:24.423Z</updated>
    
    <content type="html"><![CDATA[<p>zabbix告警提示系统：Free innodes is less than 20% on volume /</p><p>1.查看剩余innode信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -ih</span><br></pre></td></tr></table></figure><a id="more"></a><p>2.找到这些占用较大innode的无用文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">从根开始遍历根目录</span></span><br><span class="line"> for i in /*; do echo $i; find $i |wc -l; done</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">我这里找到了/var目录innodes占用较大，继续遍历</span></span><br><span class="line"> for i in /var/*; do echo $i; find $i |wc -l; done</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 这里显示/var/spool目录，继续找</span></span><br><span class="line"> for i in /var/spool/*; do echo $i; find $i |wc -l; done</span><br></pre></td></tr></table></figure><p>以此类推，最终找到了占用较大innode的目录是/var/spool/postfix/maildrop</p><p>3.原因</p><p>是因为maildrop目录下堆积了太多文件导致的。linux在执行cron时，会将cron执行脚本中的output和warning信息，都会以邮件的形式发送Cron所有者， 而由于环境中的sendmail和postfix没有正常运行，导致邮件发送不成功，全部小文件堆积在了maildrop目录下面，而且没有自动清理转换的机制，所以时间一长，此目录就堆积了大量文件。</p><p>4.清理maildrop目录文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /var/spool/postfix/maildrop;  ls | xargs rm -rf</span><br></pre></td></tr></table></figure><p>5.预防后患</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/crontab</span><br><span class="line">将‘MAILTO=root’替换成‘MAILTO=""，然后service crond restart即可。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;zabbix告警提示系统：Free innodes is less than 20% on volume /&lt;/p&gt;
&lt;p&gt;1.查看剩余innode信息&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;df -ih&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="高级运维" scheme="https://garywu520.github.io/blog/tags/%E9%AB%98%E7%BA%A7%E8%BF%90%E7%BB%B4/"/>
    
      <category term="zabbix" scheme="https://garywu520.github.io/blog/tags/zabbix/"/>
    
      <category term="innode" scheme="https://garywu520.github.io/blog/tags/innode/"/>
    
      <category term="spool" scheme="https://garywu520.github.io/blog/tags/spool/"/>
    
      <category term="maildrop" scheme="https://garywu520.github.io/blog/tags/maildrop/"/>
    
  </entry>
  
  <entry>
    <title>MySQL慢查询记录与分析</title>
    <link href="https://garywu520.github.io/blog/2019/10/11/MySQL%E6%85%A2%E6%9F%A5%E8%AF%A2%E8%AE%B0%E5%BD%95%E4%B8%8E%E5%88%86%E6%9E%90/"/>
    <id>https://garywu520.github.io/blog/2019/10/11/MySQL慢查询记录与分析/</id>
    <published>2019-10-11T08:13:48.000Z</published>
    <updated>2019-10-11T10:43:02.545Z</updated>
    
    <content type="html"><![CDATA[<h5 id="一、查看慢查询-配置"><a href="#一、查看慢查询-配置" class="headerlink" title="一、查看慢查询-配置"></a>一、查看慢查询-配置</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &apos;slow_query%&apos;;</span><br><span class="line">mysql&gt; show variables like &apos;long_query_time&apos;;</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="二、配置慢查询"><a href="#二、配置慢查询" class="headerlink" title="二、配置慢查询"></a>二、配置慢查询</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#将 slow_query_log 全局变量设置为“ON”状态</span><br><span class="line">mysql&gt; set global slow_query_log=&apos;ON&apos;; </span><br><span class="line"></span><br><span class="line">#设置慢查询日志存放的位置</span><br><span class="line">mysql&gt; set global slow_query_log_file=&apos;/usr/local/mysql/data/slow.log&apos;;</span><br><span class="line"></span><br><span class="line">#查询超过1秒就记录</span><br><span class="line">mysql&gt; set global long_query_time=1;</span><br></pre></td></tr></table></figure><p>配置文件配置 cat /etc/my.cnf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">slow_query_log = ON</span><br><span class="line">slow_query_log_file = /usr/local/mysql/data/slow.log</span><br><span class="line">long_query_time = 1</span><br></pre></td></tr></table></figure><h5 id="三、慢查询分析工具-报告"><a href="#三、慢查询分析工具-报告" class="headerlink" title="三、慢查询分析工具/报告"></a>三、慢查询分析工具/报告</h5><h5 id="1-Python脚本-不太好使，有报错"><a href="#1-Python脚本-不太好使，有报错" class="headerlink" title="1. Python脚本(不太好使，有报错)"></a>1. Python脚本(不太好使，有报错)</h5><p>项目Fork版地址：<a href="https://github.com/garywu520/Mysql-SlowLog-analysis" target="_blank" rel="noopener">https://github.com/garywu520/Mysql-SlowLog-analysis</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">安装依赖</span></span><br><span class="line">easy_install Jinja2 或 pip install Jinja2</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/kalivim/Mysql-SlowLog-analysis/master/analysis-slow-log.py</span><br><span class="line">chmod +x analysis-slow-log.py</span><br><span class="line">./analysis-slow-log.py Mysql_SlowLog_file general_json_filename report_name</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>Mysql_SlowLog_file      mysql慢查询日志的文件名</li><li>general_json_filename   脚本生成的json报告文件名</li><li>report_name            生成的Html报告文件名</li></ul><h5 id="2-pt-query-digest原生log分析"><a href="#2-pt-query-digest原生log分析" class="headerlink" title="2. pt-query-digest原生log分析"></a>2. pt-query-digest原生log分析</h5><p>编译安装percona-toolkit</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">安装依赖</span></span><br><span class="line">yum install *MakeMaker* mysql-libs  perl-TermReadKey perl-DBD-MySQL</span><br></pre></td></tr></table></figure><p>下载编译安装</p><p>Percona Toolkit 3.1.0: <a href="https://www.percona.com/downloads/percona-toolkit/LATEST/binary/" target="_blank" rel="noopener">官网下载地址</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf percona-toolkit-3.1.0_x86_64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">编译安装</span></span><br><span class="line">cd percona-toolkit-3.1.0</span><br><span class="line">perl Makefile.PL</span><br><span class="line">make &amp;&amp; make test</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -lh /usr/local/bin/pt-query-digest</span><br></pre></td></tr></table></figure><p>pt-query-digest使用</p><p>这里我们用到了这个文件 /usr/local/bin/pt-query-digest</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">生成json报告</span></span><br><span class="line">pt-query-digest --progress time,1 --output json mysql-slow.log</span><br></pre></td></tr></table></figure><p>参数释义：</p><p>​    – progress time,1   显示慢查询分析进度，没1s刷新一次</p><p>​    –output  分析结果输出类型, json, report , json-anon</p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;一、查看慢查询-配置&quot;&gt;&lt;a href=&quot;#一、查看慢查询-配置&quot; class=&quot;headerlink&quot; title=&quot;一、查看慢查询-配置&quot;&gt;&lt;/a&gt;一、查看慢查询-配置&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; show variables like &amp;apos;slow_query%&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; show variables like &amp;apos;long_query_time&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="https://garywu520.github.io/blog/tags/MySQL/"/>
    
      <category term="pt-query-digest" scheme="https://garywu520.github.io/blog/tags/pt-query-digest/"/>
    
      <category term="慢查询" scheme="https://garywu520.github.io/blog/tags/%E6%85%A2%E6%9F%A5%E8%AF%A2/"/>
    
      <category term="分析" scheme="https://garywu520.github.io/blog/tags/%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7 PHP安装mcrypt扩展</title>
    <link href="https://garywu520.github.io/blog/2019/09/29/CentOS7-PHP%E5%AE%89%E8%A3%85mcrypt%E6%89%A9%E5%B1%95/"/>
    <id>https://garywu520.github.io/blog/2019/09/29/CentOS7-PHP安装mcrypt扩展/</id>
    <published>2019-09-29T05:38:32.000Z</published>
    <updated>2019-09-29T05:43:25.343Z</updated>
    
    <content type="html"><![CDATA[<h5 id="1-下载对应PHP版本解压"><a href="#1-下载对应PHP版本解压" class="headerlink" title="1. 下载对应PHP版本解压"></a>1. 下载对应PHP版本解压</h5><ul><li>官网: <a href="http://www.php.net/releases/" target="_blank" rel="noopener">http://www.php.net/releases/</a></li><li>这里是php 5.4.16, 在官网搜索这个版本下载</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://museum.php.net/php5/php-5.4.16.tar.gz</span><br><span class="line">tar -zxvf php-5.4.16.tar.gz</span><br><span class="line">cd php-5.4.16/ext/mcrypt/</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@globtc-online mcrypt]# phpize</span><br><span class="line">Configuring for:</span><br><span class="line">PHP Api Version:         20100412</span><br><span class="line">Zend Module Api No:      20100525</span><br><span class="line">Zend Extension Api No:   220100525</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">whereis php-config</span><br><span class="line">./configure --with-php-config=/usr/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">出现如下内容，说明安装成功</span></span><br><span class="line">Installing shared extensions:     /usr/lib64/php/modules/</span><br></pre></td></tr></table></figure><h5 id="2-检查并配置扩展"><a href="#2-检查并配置扩展" class="headerlink" title="2. 检查并配置扩展"></a>2. 检查并配置扩展</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -lh /usr/lib64/php/modules/mcrypt.so</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">/etc/php.ini 添加如下行：</span></span><br><span class="line">extension=/usr/lib64/php/modules/mcrypt.so</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart php-fpm</span><br><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;1-下载对应PHP版本解压&quot;&gt;&lt;a href=&quot;#1-下载对应PHP版本解压&quot; class=&quot;headerlink&quot; title=&quot;1. 下载对应PHP版本解压&quot;&gt;&lt;/a&gt;1. 下载对应PHP版本解压&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;官网: &lt;a href=&quot;http://www.php.net/releases/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.php.net/releases/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;这里是php 5.4.16, 在官网搜索这个版本下载&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget http://museum.php.net/php5/php-5.4.16.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -zxvf php-5.4.16.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd php-5.4.16/ext/mcrypt/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="高级运维" scheme="https://garywu520.github.io/blog/tags/%E9%AB%98%E7%BA%A7%E8%BF%90%E7%BB%B4/"/>
    
      <category term="PHP" scheme="https://garywu520.github.io/blog/tags/PHP/"/>
    
      <category term="mcrypt" scheme="https://garywu520.github.io/blog/tags/mcrypt/"/>
    
      <category term="extension" scheme="https://garywu520.github.io/blog/tags/extension/"/>
    
  </entry>
  
  <entry>
    <title>Redis RDB数据备份恢复流程</title>
    <link href="https://garywu520.github.io/blog/2019/09/25/Redis-RDB%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D%E6%B5%81%E7%A8%8B/"/>
    <id>https://garywu520.github.io/blog/2019/09/25/Redis-RDB数据备份恢复流程/</id>
    <published>2019-09-25T11:04:06.000Z</published>
    <updated>2019-09-25T11:06:20.930Z</updated>
    
    <content type="html"><![CDATA[<h5 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h5><ul><li>appendonly为no，仅有RDB持久化</li><li>架构：Redis 一主两从+sentinel哨兵</li><li>Redis使用supervisor管理</li></ul><a id="more"></a><h5 id="正确的数据备份与恢复流程"><a href="#正确的数据备份与恢复流程" class="headerlink" title="正确的数据备份与恢复流程"></a>正确的数据备份与恢复流程</h5><h5 id="1-备份"><a href="#1-备份" class="headerlink" title="1. 备份"></a>1. 备份</h5><ul><li>找到当前的Master节点，执行SAVE命令将最新的key写入磁盘</li><li>拷贝备份文件[/usr/local/redis/data/dump.rdb]到/root/目录下</li></ul><h5 id="2-恢复"><a href="#2-恢复" class="headerlink" title="2. 恢复"></a>2. 恢复</h5><ul><li><p>supervisorctl stop所有节点的sentinel服务</p></li><li><p>supervisorctl stop 两个slave服务</p></li><li><p>redis主节点的supervisor redis配置文件 临时 注释以下两行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">autostart=<span class="literal">true</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">autorestart=<span class="literal">true</span></span></span><br></pre></td></tr></table></figure></li><li><p>优雅关闭Master</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -c -h 192.168.1.168 -p 6380 -a "test123"</span><br><span class="line"><span class="meta">redis&gt;</span><span class="bash"> SHUTDOWN</span></span><br></pre></td></tr></table></figure></li><li><p>数据拷贝</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /root/dump.rdb /usr/local/redis/data/</span><br></pre></td></tr></table></figure></li><li><p>启动Master节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl start redis</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">验证导入的数据</span></span><br><span class="line">redis-cli -c -h 192.168.1.168 -p 6380 -a "test123"</span><br><span class="line"><span class="meta">redis&gt;</span><span class="bash"> dbsize</span></span><br></pre></td></tr></table></figure></li><li><p>redis主节点取消supervisor redis配置文件的注释, 并重启master</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">autostart=true</span><br><span class="line">autorestart=true</span><br></pre></td></tr></table></figure><p>supervisorctl restart redis</p></li><li><p>启动两个Slave</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl start redis</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">验证Slave从库同步</span></span><br><span class="line">登录redis slave </span><br><span class="line"><span class="meta">redis&gt;</span><span class="bash"> dbsize</span></span><br></pre></td></tr></table></figure></li><li><p>启动三个节点的sentinel</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl start redis-sentinel</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;appendonly为no，仅有RDB持久化&lt;/li&gt;
&lt;li&gt;架构：Redis 一主两从+sentinel哨兵&lt;/li&gt;
&lt;li&gt;Redis使用supervisor管理&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Redis" scheme="https://garywu520.github.io/blog/tags/Redis/"/>
    
      <category term="RDB" scheme="https://garywu520.github.io/blog/tags/RDB/"/>
    
      <category term="rdb备份恢复" scheme="https://garywu520.github.io/blog/tags/rdb%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D/"/>
    
  </entry>
  
  <entry>
    <title>shell脚本执行redis命令</title>
    <link href="https://garywu520.github.io/blog/2019/09/25/shell%E8%84%9A%E6%9C%AC%E6%89%A7%E8%A1%8Credis%E5%91%BD%E4%BB%A4/"/>
    <id>https://garywu520.github.io/blog/2019/09/25/shell脚本执行redis命令/</id>
    <published>2019-09-25T09:34:03.000Z</published>
    <updated>2019-09-25T09:44:16.704Z</updated>
    
    <content type="html"><![CDATA[<p>shell脚本中执行redis命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 192.168.1.186 -p 6380 -a test123 info</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo "get old1" | redis-cli -h 192.168.1.186 -p 6380 -a test123</span><br></pre></td></tr></table></figure><p>参数释义：</p><ul><li>-a 指定redis密码</li><li>最后的”info” 则是想要执行的redis命令</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;shell脚本中执行redis命令&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td cl
      
    
    </summary>
    
    
      <category term="redis" scheme="https://garywu520.github.io/blog/tags/redis/"/>
    
      <category term="shell" scheme="https://garywu520.github.io/blog/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7安装php redis扩展</title>
    <link href="https://garywu520.github.io/blog/2019/09/25/CentOS7%E5%AE%89%E8%A3%85php-redis%E6%89%A9%E5%B1%95/"/>
    <id>https://garywu520.github.io/blog/2019/09/25/CentOS7安装php-redis扩展/</id>
    <published>2019-09-25T07:00:56.000Z</published>
    <updated>2019-09-25T07:13:59.627Z</updated>
    
    <content type="html"><![CDATA[<h5 id="一、编译扩展"><a href="#一、编译扩展" class="headerlink" title="一、编译扩展"></a>一、编译扩展</h5><p>安装phpize</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y php-devel</span><br></pre></td></tr></table></figure><p>下载php redis包</p><p>Github项目地址：<a href="https://github.com/phpredis/phpredis/releases" target="_blank" rel="noopener">https://github.com/phpredis/phpredis/releases</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/phpredis/phpredis/archive/3.1.3.tar.gz</span><br><span class="line">tar -zxvf /root/3.1.3.tar.gz</span><br><span class="line">cd phpredis-3.1.3</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">使用如下命令，在源码目录中编译php扩展</span></span><br><span class="line">/usr/bin/phpize</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><a id="more"></a><p>由于我的操作系统是x64位，故编译完成后提示如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Build complete.</span><br><span class="line">Don't forget to run 'make test'.</span><br><span class="line"></span><br><span class="line">Installing shared extensions:     /usr/lib64/php/modules/</span><br></pre></td></tr></table></figure><p>PHP Redis扩展位置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -lh  /usr/lib64/php/modules/redis.so</span><br></pre></td></tr></table></figure><h5 id="二、修改php配置"><a href="#二、修改php配置" class="headerlink" title="二、修改php配置"></a>二、修改php配置</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/php.ini    #添加如下行</span><br><span class="line">extension=/usr/lib64/php/modules/redis.so</span><br></pre></td></tr></table></figure><h5 id="三、重启Apache服务-并测试"><a href="#三、重启Apache服务-并测试" class="headerlink" title="三、重启Apache服务, 并测试"></a>三、重启Apache服务, 并测试</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;一、编译扩展&quot;&gt;&lt;a href=&quot;#一、编译扩展&quot; class=&quot;headerlink&quot; title=&quot;一、编译扩展&quot;&gt;&lt;/a&gt;一、编译扩展&lt;/h5&gt;&lt;p&gt;安装phpize&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install -y php-devel&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;下载php redis包&lt;/p&gt;
&lt;p&gt;Github项目地址：&lt;a href=&quot;https://github.com/phpredis/phpredis/releases&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/phpredis/phpredis/releases&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https://github.com/phpredis/phpredis/archive/3.1.3.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -zxvf /root/3.1.3.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd phpredis-3.1.3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;使用如下命令，在源码目录中编译php扩展&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/usr/bin/phpize&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make &amp;amp;&amp;amp; make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="高级运维" scheme="https://garywu520.github.io/blog/tags/%E9%AB%98%E7%BA%A7%E8%BF%90%E7%BB%B4/"/>
    
      <category term="redis" scheme="https://garywu520.github.io/blog/tags/redis/"/>
    
      <category term="php" scheme="https://garywu520.github.io/blog/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>nmap端口扫描</title>
    <link href="https://garywu520.github.io/blog/2019/09/20/nmap%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/"/>
    <id>https://garywu520.github.io/blog/2019/09/20/nmap端口扫描/</id>
    <published>2019-09-20T10:25:01.000Z</published>
    <updated>2019-09-20T10:25:58.246Z</updated>
    
    <content type="html"><![CDATA[<h5 id="1-应用场景"><a href="#1-应用场景" class="headerlink" title="1.应用场景"></a>1.应用场景</h5><p>如果有台服务器，开放了一些端口，尤其是SSH端口，忘记设置了多少端口号的时候，又不想重启服务器，则需要对其进行端口扫描</p><h5 id="2-工具-nmap"><a href="#2-工具-nmap" class="headerlink" title="2. 工具: nmap"></a>2. 工具: nmap</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nmap</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="3-用法"><a href="#3-用法" class="headerlink" title="3. 用法"></a>3. 用法</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sS -p 1-65535 -v 服务器公网IP</span><br></pre></td></tr></table></figure><p>参数：</p><ul><li>-sS     TCP SYN扫描</li><li>-P     指定端口范围  </li><li>-V     详细信息  </li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;1-应用场景&quot;&gt;&lt;a href=&quot;#1-应用场景&quot; class=&quot;headerlink&quot; title=&quot;1.应用场景&quot;&gt;&lt;/a&gt;1.应用场景&lt;/h5&gt;&lt;p&gt;如果有台服务器，开放了一些端口，尤其是SSH端口，忘记设置了多少端口号的时候，又不想重启服务器，则需要对其进行端口扫描&lt;/p&gt;
&lt;h5 id=&quot;2-工具-nmap&quot;&gt;&lt;a href=&quot;#2-工具-nmap&quot; class=&quot;headerlink&quot; title=&quot;2. 工具: nmap&quot;&gt;&lt;/a&gt;2. 工具: nmap&lt;/h5&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install -y nmap&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="nmap" scheme="https://garywu520.github.io/blog/tags/nmap/"/>
    
  </entry>
  
</feed>
